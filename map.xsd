<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="map">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="cores"/>
        <xs:element ref="damage"/>
        <xs:element ref="destroyables"/>
        <xs:element ref="flags"/>
        <xs:element ref="gamemode"/>
        <xs:element ref="if"/>
        <xs:element ref="kill-reward"/>
        <xs:element ref="objective"/>
        <xs:element ref="portals"/>
        <xs:element ref="regions"/>
        <xs:element ref="respawn"/>
        <xs:element ref="score"/>
        <xs:element ref="spawns"/>
        <xs:element ref="structures"/>
        <xs:element ref="teams"/>
        <xs:element ref="time"/>
        <xs:element ref="wools"/>
        <xs:element ref="armorkeep"/>
        <xs:element ref="authors"/>
        <xs:element ref="autorespawn"/>
        <xs:element ref="blitz"/>
        <xs:element ref="block-drops"/>
        <xs:element ref="broadcasts"/>
        <xs:element ref="classes"/>
        <xs:element ref="contributors"/>
        <xs:element ref="control-points"/>
        <xs:element ref="crafting"/>
        <xs:element ref="difficulty"/>
        <xs:element ref="disabledamage"/>
        <xs:element ref="edition"/>
        <xs:element ref="falling-blocks"/>
        <xs:element ref="filters"/>
        <xs:element ref="friendlyfire"/>
        <xs:element ref="gamerules"/>
        <xs:element ref="genre"/>
        <xs:element ref="hunger"/>
        <xs:element ref="include"/>
        <xs:element ref="item-mods"/>
        <xs:element ref="itemkeep"/>
        <xs:element ref="itemremove"/>
        <xs:element ref="itemrepair"/>
        <xs:element ref="keep-potion-bottles"/>
        <xs:element ref="kill-rewards"/>
        <xs:element ref="king"/>
        <xs:element ref="kits"/>
        <xs:element ref="lootables"/>
        <xs:element ref="maxbuildheight"/>
        <xs:element ref="mobs"/>
        <xs:element ref="modes"/>
        <xs:element ref="multitrade"/>
        <xs:element ref="mutations"/>
        <xs:element ref="name"/>
        <xs:element ref="phase"/>
        <xs:element ref="pickups"/>
        <xs:element ref="players"/>
        <xs:element ref="projectiles"/>
        <xs:element ref="proximity-alarms"/>
        <xs:element ref="rage"/>
        <xs:element ref="renewables"/>
        <xs:element ref="respawns"/>
        <xs:element ref="rules"/>
        <xs:element ref="slug"/>
        <xs:element ref="timelock"/>
        <xs:element ref="tnt"/>
        <xs:element ref="toolrepair"/>
        <xs:element ref="tutorial"/>
        <xs:element ref="version"/>
        <xs:element ref="world-borders"/>
      </xs:choice>
      <xs:attribute name="game"/>
      <xs:attribute name="internal" type="xs:boolean"/>
      <xs:attribute name="name"/>
      <xs:attribute name="proto" type="xs:NMTOKEN" use="required"/>
      <xs:attribute name="title"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="armorkeep">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="authors">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="unbounded" ref="author"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="autorespawn">
    <xs:complexType/>
  </xs:element>
  <xs:element name="blitz">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="lives"/>
        <xs:element minOccurs="0" ref="broadcastLives"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="lives" type="xs:integer"/>
  <xs:element name="broadcastLives" type="xs:boolean"/>
  <xs:element name="block-drops">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
      <xs:attribute name="trample" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="blockdrops">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="broadcasts">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="alert"/>
        <xs:element ref="tip"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="alert">
    <xs:complexType mixed="true">
      <xs:attribute name="after" type="timeType" use="required"/>
      <xs:attribute name="every" type="timeType"/>
      <xs:attribute name="count" type="xs:NMTOKEN"/>
      <xs:attribute name="filter" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tip">
    <xs:complexType mixed="true">
      <xs:attribute name="after" type="timeType" use="required"/>
      <xs:attribute name="every" type="timeType"/>
      <xs:attribute name="count" type="xs:NMTOKEN"/>
      <xs:attribute name="filter" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="classes">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="class"/>
      </xs:sequence>
      <xs:attribute name="family" type="xs:string"/>
      <xs:attribute name="restrict" type="xs:boolean"/>
      <xs:attribute name="sticky" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="contributors">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="unbounded" ref="contributor"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="control-points">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="control-point"/>
      </xs:sequence>
      <xs:attribute name="capture-filter" type="xs:string"/>
      <xs:attribute name="capture-players" type="xs:string"/>
      <xs:attribute name="capture-rule" type="xs:string"/>
      <xs:attribute name="capture-time" type="xs:NMTOKEN"/>
      <xs:attribute name="decay" type="xs:decimal"/>
      <xs:attribute name="incremental" type="xs:boolean"/>
      <xs:attribute name="neutral-state" type="xs:boolean"/>
      <xs:attribute name="owner-points" type="xs:integer"/>
      <xs:attribute name="permanent" type="xs:boolean"/>
      <xs:attribute name="points" type="xs:decimal"/>
      <xs:attribute name="points-growth" type="xs:integer"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="scaled-time" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="show-effects" type="xs:boolean"/>
      <xs:attribute name="show-messages" type="xs:boolean"/>
      <xs:attribute name="show-progress" type="xs:boolean"/>
      <xs:attribute name="time-multiplier" type="xs:decimal"/>
      <xs:attribute name="visual-materials" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="control-point">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="capture-region"/>
        <xs:element minOccurs="0" ref="progress-display-region"/>
        <xs:element minOccurs="0" ref="owner-display-region"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="capture"/>
          <xs:element ref="capture-filter"/>
          <xs:element ref="captured"/>
          <xs:element ref="progress"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="player-filter"/>
      </xs:sequence>
      <xs:attribute name="capture" type="xs:string"/>
      <xs:attribute name="capture-players" type="xs:string"/>
      <xs:attribute name="capture-rule" type="xs:string"/>
      <xs:attribute name="capture-time" type="xs:NMTOKEN"/>
      <xs:attribute name="captured" type="xs:string"/>
      <xs:attribute name="decay" type="xs:decimal"/>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="id"/>
      <xs:attribute name="incremental" type="xs:boolean"/>
      <xs:attribute name="initial-owner" type="xs:string"/>
      <xs:attribute name="name"/>
      <xs:attribute name="neutral-state" type="xs:boolean"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="permanent" type="xs:boolean"/>
      <xs:attribute name="player-filter" type="xs:string"/>
      <xs:attribute name="points" type="xs:decimal"/>
      <xs:attribute name="progress" type="xs:string"/>
      <xs:attribute name="recovery" type="xs:decimal"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="scaled-time" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="time-multiplier" type="xs:decimal"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="capture-region">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="everywhere"/>
        <xs:element ref="translate"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="progress-display-region">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="translate"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="owner-display-region">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="translate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="player-filter">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="all"/>
        <xs:element ref="any"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="crafting">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="disable"/>
        <xs:choice>
          <xs:element ref="disabled"/>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="shaped"/>
            <xs:element ref="shapeless"/>
          </xs:choice>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="disable" type="xs:string"/>
  <xs:element name="disabled" type="xs:string"/>
  <xs:element name="shaped">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="result"/>
        <xs:element ref="shape"/>
        <xs:element ref="ingredient"/>
      </xs:sequence>
      <xs:attribute name="override" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="shape">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="row"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="row" type="xs:string"/>
  <xs:element name="shapeless">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="result"/>
        <xs:element maxOccurs="unbounded" ref="ingredient"/>
      </xs:sequence>
      <xs:attribute name="override" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="difficulty" type="xs:string"/>
  <xs:element name="disabledamage">
    <xs:complexType>
      <xs:choice>
        <xs:element maxOccurs="unbounded" ref="damage"/>
        <xs:element maxOccurs="unbounded" ref="cause"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="edition" type="xs:string"/>
  <xs:element name="falling-blocks">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="filters">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="completed"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="all"/>
          <xs:element ref="allow"/>
          <xs:element ref="any"/>
          <xs:element ref="carrying"/>
          <xs:element ref="carrying-flag"/>
          <xs:element ref="cause"/>
          <xs:element ref="complement"/>
          <xs:element ref="cuboid"/>
          <xs:element ref="deny"/>
          <xs:element ref="holding"/>
          <xs:element ref="intersect"/>
          <xs:element ref="material"/>
          <xs:element ref="not"/>
          <xs:element ref="objective"/>
          <xs:element ref="random"/>
          <xs:element ref="rectangle"/>
          <xs:element ref="team"/>
          <xs:element ref="time"/>
          <xs:element ref="union"/>
          <xs:element ref="wearing"/>
          <xs:element ref="countdown"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="flying"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="score"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="apply"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="class"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="completed">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="id" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="countdown">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="all"/>
      </xs:sequence>
      <xs:attribute name="duration" type="xs:NMTOKEN"/>
      <xs:attribute name="message" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="flying">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="friendlyfire" type="xs:string"/>
  <xs:element name="gamerules">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="doDaylightCycle"/>
          <xs:element ref="doTileDrops"/>
        </xs:choice>
        <xs:choice minOccurs="0">
          <xs:element ref="doDayLightCycle"/>
          <xs:element ref="doFireTick"/>
          <xs:element ref="doMobLoot"/>
          <xs:element ref="naturalRegeneration"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="doDaylightCycle" type="xs:boolean"/>
  <xs:element name="doTileDrops" type="xs:boolean"/>
  <xs:element name="doDayLightCycle" type="xs:boolean"/>
  <xs:element name="doFireTick" type="xs:boolean"/>
  <xs:element name="doMobLoot" type="xs:boolean"/>
  <xs:element name="naturalRegeneration" type="xs:boolean"/>
  <xs:element name="genre" type="xs:string"/>
  <xs:element name="hunger">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="depletion"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="depletion" type="xs:string"/>
  <xs:element name="include">
    <xs:complexType>
      <xs:attribute name="src" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="item-mods">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="itemkeep">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="itemremove">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="itemrepair">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="keep-potion-bottles">
    <xs:complexType/>
  </xs:element>
  <xs:element name="kill-rewards">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="kill-reward"/>
        <xs:element minOccurs="0" ref="filter"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="killreward">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="kill-streak"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="filter"/>
          <xs:element ref="item"/>
          <xs:element ref="kit"/>
          <xs:element ref="potion"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="effect"/>
      </xs:sequence>
      <xs:attribute name="kit" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="killrewards">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="kill-reward"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="king">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="hills"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="hills">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="hill"/>
      </xs:sequence>
      <xs:attribute name="capture-rule" type="xs:string"/>
      <xs:attribute name="capture-time" type="xs:NMTOKEN"/>
      <xs:attribute name="neutral-state" type="xs:boolean"/>
      <xs:attribute name="permanent" type="xs:boolean"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="points-growth" type="xs:integer"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="visual-materials" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="hill">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="capture"/>
        <xs:element minOccurs="0" ref="progress"/>
        <xs:element minOccurs="0" ref="captured"/>
      </xs:sequence>
      <xs:attribute name="capture" type="xs:string"/>
      <xs:attribute name="capture-rule" type="xs:string"/>
      <xs:attribute name="capture-time" type="xs:NMTOKEN"/>
      <xs:attribute name="id" type="xs:NMTOKEN"/>
      <xs:attribute name="initial-owner" type="xs:string"/>
      <xs:attribute name="name"/>
      <xs:attribute name="neutral-state" type="xs:boolean"/>
      <xs:attribute name="permanent" type="xs:boolean"/>
      <xs:attribute name="player-filter" type="xs:NMTOKEN"/>
      <xs:attribute name="points" type="xs:decimal"/>
      <xs:attribute name="progress" type="xs:string"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="show-progress" type="xs:boolean"/>
      <xs:attribute name="time-multiplier" type="xs:decimal"/>
      <xs:attribute name="decay"/>
      <xs:attribute name="recovery"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="kits">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="kit"/>
          <xs:element ref="give"/>
          <xs:element ref="lend"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="give">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="kit"/>
      </xs:sequence>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="kit" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lend">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="kit"/>
      </xs:sequence>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="kit" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lootables">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="fill"/>
        <xs:element ref="loot"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="fill">
    <xs:complexType>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="loot" type="xs:string"/>
      <xs:attribute name="refill-clear" type="xs:boolean"/>
      <xs:attribute name="refill-interval" type="xs:NMTOKEN"/>
      <xs:attribute name="refill-trigger" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="loot">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="any"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="maxbuildheight" type="xs:integer"/>
  <xs:element name="mobs">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="filter"/>
      </xs:sequence>
      <xs:attribute name="filter" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="modes">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="mode"/>
      </xs:sequence>
      <xs:attribute name="boss-bar" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mode">
    <xs:complexType>
      <xs:attribute name="after" type="xs:NMTOKEN" use="required"/>
      <xs:attribute name="material" use="required"/>
      <xs:attribute name="name"/>
      <xs:attribute name="show-before" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="multitrade">
    <xs:complexType/>
  </xs:element>
  <xs:element name="mutations">
    <xs:complexType>
      <xs:attribute name="chance" type="xs:decimal"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="name" type="xs:string"/>
  <xs:element name="phase" type="xs:string"/>
  <xs:element name="pickups">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="pickup"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="pickup">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="region"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="appearance" use="required"/>
      <xs:attribute name="effects" type="xs:boolean"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="pickup-filter" type="xs:string"/>
      <xs:attribute name="pickup-time" type="timeType"/>
      <xs:attribute name="respawn-time" type="timeType"/>
      <xs:attribute name="sounds" type="xs:boolean"/>
      <xs:attribute name="spawn-filter" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="players">
    <xs:complexType>
      <xs:attribute name="min" type="xs:integer"/>
      <xs:attribute name="max" type="xs:integer"/>
      <xs:attribute name="max-overfill" type="xs:integer"/>
      <xs:attribute name="colors" type="xs:boolean"/>
      <xs:attribute name="show-name-tags" type="xs:boolean"/>
      <xs:attribute name="spread" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="projectiles">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="projectile"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="projectile">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="effect"/>
        <xs:element ref="destroy-filter"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="potion"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name"/>
      <xs:attribute name="click" type="xs:string"/>
      <xs:attribute name="cooldown" type="xs:NMTOKEN"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="destroy-filter" type="xs:string"/>
      <xs:attribute name="effect" type="xs:NMTOKEN"/>
      <xs:attribute name="effects" type="xs:anyURI"/>
      <xs:attribute name="potion" type="xs:anyURI"/>
      <xs:attribute name="projectile" type="entityTypes"/>
      <xs:attribute name="throwable" type="xs:boolean"/>
      <xs:attribute name="velocity" type="xs:decimal"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="destroy-filter">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="filter"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="proximity-alarms">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="proximity-alarm"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="proximity-alarm">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="detect"/>
      </xs:sequence>
      <xs:attribute name="flare-radius" type="xs:integer"/>
      <xs:attribute name="message"/>
      <xs:attribute name="region" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="detect">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="team"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="rage">
    <xs:complexType/>
  </xs:element>
  <xs:element name="renewables">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="renewable"/>
      </xs:sequence>
      <xs:attribute name="interval" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="renewable">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="renew-filer"/>
        <xs:element minOccurs="0" ref="region"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="renew"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="replace"/>
        <xs:element minOccurs="0" ref="renew-filter"/>
        <xs:element minOccurs="0" ref="replace-filter"/>
      </xs:sequence>
      <xs:attribute name="avoid-entities" type="xs:boolean"/>
      <xs:attribute name="avoid-players" type="xs:integer"/>
      <xs:attribute name="grow" type="xs:boolean"/>
      <xs:attribute name="interval" type="xs:NMTOKEN"/>
      <xs:attribute name="particles" type="xs:boolean"/>
      <xs:attribute name="rate" type="xs:decimal"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="renew-filter" type="xs:string"/>
      <xs:attribute name="sound" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="renew-filer">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="any"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="renew" type="xs:string"/>
  <xs:element name="replace" type="xs:anyURI"/>
  <xs:element name="renew-filter">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="filter"/>
        <xs:element ref="material"/>
        <xs:element ref="not"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="replace-filter">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="material"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="respawns">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="respawn"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="rules">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="slug" type="xs:NMTOKEN"/>
  <xs:element name="timelock" type="xs:string"/>
  <xs:element name="tnt">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element ref="dispenser-tnt-limit"/>
          <xs:element ref="dispenser-tnt-multiplier"/>
        </xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="blockdamage"/>
          <xs:element ref="friendly-defuse"/>
          <xs:element ref="fuse"/>
          <xs:element ref="instantignite"/>
          <xs:element ref="licensing"/>
          <xs:element ref="power"/>
          <xs:element ref="yield"/>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="friendly-defuse" type="xs:boolean"/>
      <xs:attribute name="yield" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dispenser-tnt-limit" type="xs:integer"/>
  <xs:element name="dispenser-tnt-multiplier" type="xs:decimal"/>
  <xs:element name="blockdamage" type="xs:boolean"/>
  <xs:element name="friendly-defuse" type="xs:string"/>
  <xs:element name="fuse" type="xs:NMTOKEN"/>
  <xs:element name="instantignite" type="xs:boolean"/>
  <xs:element name="licensing" type="xs:boolean"/>
  <xs:element name="power" type="xs:decimal"/>
  <xs:element name="yield" type="xs:integer"/>
  <xs:element name="toolrepair">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tool"/>
        <xs:element minOccurs="0" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tool" type="itemType"/>
  <xs:element name="tutorial">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="stage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="stage">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="message"/>
        <xs:element minOccurs="0" ref="teleport"/>
      </xs:sequence>
      <xs:attribute name="title" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="teleport">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="point"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="version" type="semanticType"/>
  <xs:element name="world-borders">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="world-border"/>
      </xs:sequence>
      <xs:attribute name="buffer" type="xs:integer"/>
      <xs:attribute name="center"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="warning-distance" type="xs:integer"/>
      <xs:attribute name="warning-time" type="timeType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="world-border">
    <xs:complexType>
      <xs:attribute name="after" type="timeType"/>
      <xs:attribute name="duration" type="timeType"/>
      <xs:attribute name="size" type="xs:integer"/>
      <xs:attribute name="when" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rule">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="filter"/>
        <xs:element ref="kit"/>
        <xs:element ref="region"/>
        <xs:element ref="drops"/>
        <xs:element ref="fall-chance"/>
        <xs:element ref="fall-speed"/>
        <xs:element ref="land-chance"/>
         <xs:element ref="match"/> <!-- Error? -->
        <xs:element ref="modify"/>
        <xs:element ref="replacement"/>
        <xs:element ref="sticky"/>
        <xs:element ref="wrongtool"/>
      </xs:choice>
      <xs:attribute name="delay" type="xs:integer"/>
      <xs:attribute name="fall-speed" type="xs:decimal"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="punch" type="xs:boolean"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="trample" type="xs:boolean"/>
      <xs:attribute name="wrong-tool" type="xs:boolean"/>
      <xs:attribute name="wrongtool" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="drops">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="fall-chance" type="xs:decimal"/>
  <xs:element name="fall-speed" type="xs:integer"/>
  <xs:element name="land-chance" type="xs:decimal"/>
  <xs:element name="match">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="all-blocks"/>
        <xs:choice>
          <xs:element maxOccurs="unbounded" ref="item"/>
          <xs:element maxOccurs="unbounded" ref="material"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="modify">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="attribute"/>
        <xs:element minOccurs="0" ref="enchantment"/>
        <xs:element minOccurs="0" ref="can-destroy"/>
        <xs:element minOccurs="0" ref="can-place-on"/>
      </xs:sequence>
      <xs:attribute name="name"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="show-can-destroy" type="xs:boolean"/>
      <xs:attribute name="show-can-place-on" type="xs:boolean"/>
      <xs:attribute name="show-enchantments" type="xs:boolean"/>
      <xs:attribute name="show-unbreakable" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="replacement" type="xs:string"/>
  <xs:element name="sticky">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="material"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="wrongtool" type="xs:boolean"/>
  <xs:element name="damage">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="allow"/>
        <xs:element ref="deny"/>
      </xs:choice>
      <xs:attribute name="ally" type="xs:boolean"/>
      <xs:attribute name="enemy" type="xs:boolean"/>
      <xs:attribute name="other" type="xs:boolean"/>
      <xs:attribute name="self" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="cause">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="id" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="any">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="flag-carried"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="cause"/>
        <xs:choice minOccurs="0">
          <xs:element ref="deny"/>
          <xs:element ref="always"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="option"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="any"/>
          <xs:element ref="item"/>
        </xs:choice>
        <xs:choice>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="entity"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="carrying-flag"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="time"/>
        <xs:element minOccurs="0" ref="flag-returned"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="all"/>
          <xs:element ref="filter"/>
          <xs:element ref="material"/>
          <xs:element ref="not"/>
          <xs:element ref="objective"/>
          <xs:element ref="team"/>
          <xs:element ref="void"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="region"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="wearing"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="holding"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="carrying"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="count" type="xs:NMTOKEN"/>
      <xs:attribute name="id"/>
      <xs:attribute name="parents" type="xs:string"/>
      <xs:attribute name="unique" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="always">
    <xs:complexType/>
  </xs:element>
  <xs:element name="option">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="any"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
      <xs:attribute name="weight" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="entity" type="entityType"/>
  <xs:element name="region">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0">
          <xs:element ref="above"/>
          <xs:element ref="everywhere"/>
          <xs:element ref="intersect"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="circle"/>
        <xs:choice>
          <xs:element ref="point"/>
          <xs:element ref="region"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="complement"/>
        </xs:choice>
        <xs:choice minOccurs="0">
          <xs:element ref="below"/>
          <xs:element ref="negative"/>
        </xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="cuboid"/>
          <xs:element ref="cylinder"/>
          <xs:element ref="rectangle"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="mirror"/>
          <xs:element ref="union"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="sphere"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="translate"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="block"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id"/>
      <xs:attribute name="name"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="filter">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="all"/>
        <xs:element ref="allow"/>
        <xs:element ref="any"/>
        <xs:element ref="class"/>
        <xs:element ref="filter"/>
        <xs:element ref="kill-streak"/>
        <xs:element ref="material"/>
        <xs:element ref="not"/>
        <xs:element ref="objective"/>
        <xs:element ref="spawn"/>
        <xs:element ref="team"/>
        <xs:element ref="time"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:NMTOKEN"/>
      <xs:attribute name="parents" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="material">
    <xs:complexType mixed="true">
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="not">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
        <xs:element minOccurs="0" ref="all"/>
        <xs:choice minOccurs="0">
          <xs:element ref="team"/>
          <xs:element ref="wearing"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="not"/>
        <xs:choice minOccurs="0">
          <xs:element ref="carrying"/>
          <xs:element ref="carrying-flag"/>
          <xs:element ref="cause"/>
          <xs:element ref="class"/>
          <xs:element ref="filter"/>
          <xs:element ref="flag-carried"/>
          <xs:element ref="material"/>
          <xs:element ref="time"/>
          <xs:element ref="void"/>
          <xs:element ref="gliding"/>
          <xs:element ref="same-team"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="any"/>
        <xs:element minOccurs="0" ref="objective"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="gliding">
    <xs:complexType/>
  </xs:element>
  <xs:element name="same-team">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="carrying-flag"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="gamemode" type="xs:string"/>
  <xs:element name="objective">
    <xs:complexType mixed="true">
      <xs:attribute name="any" type="xs:boolean"/>
      <xs:attribute name="id" type="xs:NMTOKEN"/>
      <xs:attribute name="team" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="score">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="box"/>
        <xs:element ref="deaths"/>
        <xs:element ref="kills"/>
        <xs:element ref="limit"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="box">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
        <xs:element minOccurs="0" ref="redeemables"/>
      </xs:sequence>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="silent" type="xs:boolean"/>
      <xs:attribute name="value" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="redeemables">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
      <xs:attribute name="region" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="deaths" type="xs:integer"/>
  <xs:element name="kills" type="xs:integer"/>
  <xs:element name="limit" type="xs:integer"/>
  <xs:element name="cores">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="cores"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="core"/>
      </xs:sequence>
      <xs:attribute name="leak" type="xs:integer"/>
      <xs:attribute name="material"/>
      <xs:attribute name="mode-changes" type="xs:boolean"/>
      <xs:attribute name="name"/>
      <xs:attribute name="team" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="core">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="team" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="everywhere">
    <xs:complexType/>
  </xs:element>
  <xs:element name="translate">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="offset" use="required"/>
      <xs:attribute name="region" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="cuboid">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="min" type="xyzType" use="required"/>
      <xs:attribute name="max" type="xyzType" use="required"/>
      <xs:attribute name="size"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="capture-filter">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="all"/>
        <xs:element ref="not"/>
        <xs:element ref="team"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="capture">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="cylinder"/>
        <xs:element ref="everywhere"/>
        <xs:element ref="region"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="progress">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="cylinder"/>
        <xs:element ref="nowhere"/>
        <xs:element ref="region"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="captured">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="cylinder"/>
        <xs:element ref="nowhere"/>
        <xs:element ref="region"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="all">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0">
          <xs:element ref="all"/>
          <xs:element ref="walking"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="match-finished"/>
        <xs:choice minOccurs="0">
          <xs:element ref="above"/>
          <xs:element ref="flag-carried"/>
        </xs:choice>
        <xs:sequence minOccurs="0">
          <xs:element ref="attacker"/>
          <xs:element ref="victim"/>
        </xs:sequence>
        <xs:element minOccurs="0" ref="cuboid"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="any"/>
          <xs:element ref="carrying"/>
          <xs:element ref="cause"/>
          <xs:element ref="class"/>
          <xs:element ref="filter"/>
          <xs:element ref="material"/>
          <xs:element ref="not"/>
          <xs:element ref="objective"/>
          <xs:element ref="random"/>
          <xs:element ref="region"/>
          <xs:element ref="spawn"/>
          <xs:element ref="team"/>
          <xs:element ref="time"/>
          <xs:element ref="wearing"/>
          <xs:element ref="can-fly"/>
          <xs:element ref="crouching"/>
          <xs:element ref="match-running"/>
          <xs:element ref="mob"/>
          <xs:element ref="participating"/>
          <xs:element ref="sprinting"/>
        </xs:choice>
        <xs:choice minOccurs="0">
          <xs:element ref="carrying-flag"/>
          <xs:element ref="flag-returned"/>
          <xs:element ref="holding"/>
          <xs:element ref="kill-streak"/>
          <xs:element ref="never"/>
          <xs:element ref="structural-load"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="walking">
    <xs:complexType/>
  </xs:element>
  <xs:element name="match-finished">
    <xs:complexType/>
  </xs:element>
  <xs:element name="attacker">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="cause"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="victim">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="cause"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="can-fly">
    <xs:complexType/>
  </xs:element>
  <xs:element name="crouching">
    <xs:complexType/>
  </xs:element>
  <xs:element name="match-running">
    <xs:complexType/>
  </xs:element>
  <xs:element name="mob" type="creatureType"/>
  <xs:element name="participating">
    <xs:complexType/>
  </xs:element>
  <xs:element name="sprinting">
    <xs:complexType/>
  </xs:element>
  <xs:element name="never">
    <xs:complexType/>
  </xs:element>
  <xs:element name="structural-load" type="xs:integer"/>
  <xs:element name="item">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="attribute"/>
        <xs:element ref="can-destroy"/>
        <xs:element ref="can-place-on"/>
        <xs:element ref="effect"/>
        <xs:element ref="enchantment"/>
        <xs:element ref="potion"/>
        <xs:element ref="skin"/>
      </xs:choice>
      <xs:attribute name="id"/>
      <xs:attribute name="name"/>
      <xs:attribute name="lore"/>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="amount" type="xs:integer"/>
      <xs:attribute name="material" type="itemType"/>
      <xs:attribute name="attributes" type="xs:anyURI"/>
      <xs:attribute name="chance" type="xs:decimal"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="enchantment" type="enchantmentLevelType"/>
      <xs:attribute name="enchantments" type="xs:NMTOKEN"/>
      <xs:attribute name="force" type="xs:boolean"/>
      <xs:attribute name="grenade" type="xs:boolean"/>
      <xs:attribute name="grenade-destroy" type="xs:boolean"/>
      <xs:attribute name="grenade-fire" type="xs:boolean"/>
      <xs:attribute name="grenade-power" type="xs:decimal"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="potions" type="xs:NMTOKEN"/>
      <xs:attribute name="prevent-sharing" type="xs:boolean"/>
      <xs:attribute name="projectile" type="xs:string"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="show-can-destroy" type="xs:boolean"/>
      <xs:attribute name="show-can-place-on" type="xs:boolean"/>
      <xs:attribute name="show-enchantments" type="xs:boolean"/>
      <xs:attribute name="show-unbreakable" type="xs:boolean"/>
      <xs:attribute name="slot" type="inventorySlot"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
      <xs:attribute name="uuid"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="skin" type="xs:base64Binary"/>
  <xs:element name="if">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="item"/>
        <xs:element ref="teams"/>
      </xs:choice>
      <xs:attribute name="april-fools" type="xs:boolean"/>
      <xs:attribute name="halloween" type="xs:boolean"/>
      <xs:attribute name="ranked" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="wools">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="wools"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="wool"/>
      </xs:sequence>
      <xs:attribute name="craftable" type="xs:boolean"/>
      <xs:attribute name="location"/>
      <xs:attribute name="team" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="wool">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="monument"/>
      </xs:sequence>
      <xs:attribute name="color" type="dyeType" use="required"/>
      <xs:attribute name="craftable" type="xs:boolean"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="location"/>
      <xs:attribute name="monument" type="xs:string"/>
      <xs:attribute name="team" type="xs:string" use="required"/>
      <xs:attribute name="woolproximity-horizontal" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="monument">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="block"/>
        <xs:element ref="region"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="kill-reward">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="effect"/>
        <xs:element ref="filter"/>
        <xs:element ref="item"/>
        <xs:element ref="kill-reward"/>
        <xs:element ref="kit"/>
        <xs:element ref="potion"/>
      </xs:choice>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="kit" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="teams">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="team"/>
      </xs:sequence>
      <xs:attribute name="show-name-tags" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="below">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="x" type="xs:integer"/>
      <xs:attribute name="y" type="xs:decimal"/>
      <xs:attribute name="z" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="portals">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="portals"/>
        <xs:element ref="portal"/>
      </xs:choice>
      <xs:attribute name="bidirectional" type="xs:boolean"/>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="observers" type="xs:string"/>
      <xs:attribute name="pitch"/>
      <xs:attribute name="smooth" type="xs:boolean"/>
      <xs:attribute name="sound" type="xs:boolean"/>
      <xs:attribute name="y" type="xs:integer"/>
      <xs:attribute name="yaw"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="portal">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="region"/>
        <xs:element ref="destination"/>
      </xs:choice>
      <xs:attribute name="bidirectional" type="xs:boolean"/>
      <xs:attribute name="destination" type="xs:string"/>
      <xs:attribute name="filter"/>
      <xs:attribute name="forward" type="xs:string"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="observers" type="xs:string"/>
      <xs:attribute name="pitch"/>
      <xs:attribute name="protect" type="xs:boolean"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="smooth" type="xs:boolean"/>
      <xs:attribute name="sound" type="xs:boolean"/>
      <xs:attribute name="x"/>
      <xs:attribute name="y"/>
      <xs:attribute name="yaw"/>
      <xs:attribute name="z"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="destination">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="cuboid"/>
        <xs:element ref="point"/>
        <xs:element ref="region"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="destroyables">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="destroyables"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="destroyable"/>
      </xs:sequence>
      <xs:attribute name="completion"/>
      <xs:attribute name="id"/>
      <xs:attribute name="materials"/>
      <xs:attribute name="mode-changes" type="xs:boolean"/>
      <xs:attribute name="name"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="repairable" type="xs:boolean"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="show-progress" type="xs:boolean"/>
      <xs:attribute name="sparks" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="destroyable">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
      </xs:sequence>
      <xs:attribute name="completion"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="material"/>
      <xs:attribute name="materials"/>
      <xs:attribute name="mode-changes" type="xs:boolean"/>
      <xs:attribute name="name"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="proximity-horizontal" type="xs:boolean"/>
      <xs:attribute name="proximity-metric"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="repairable" type="xs:boolean"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
      <xs:attribute name="show-progress" type="xs:boolean"/>
      <xs:attribute name="sparks" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="effect">
    <xs:complexType mixed="true">
      <xs:attribute name="amplifier" type="xs:integer"/>
      <xs:attribute name="duration" type="xs:NMTOKEN"/>
      <xs:attribute name="level" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="potion">
    <xs:complexType mixed="true">
      <xs:attribute name="ambient" type="xs:boolean"/>
      <xs:attribute name="amplifier" type="xs:integer"/>
      <xs:attribute name="duration" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="result">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="enchantment"/>
      </xs:sequence>
      <xs:attribute name="amount" type="xs:integer"/>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="enchantments" type="xs:NMTOKEN"/>
      <xs:attribute name="material"/>
      <xs:attribute name="name"/>
      <xs:attribute name="show-enchantments" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ingredient">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:NMTOKEN">
          <xs:attribute name="amount" type="xs:integer"/>
          <xs:attribute name="symbol" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="kill-streak">
    <xs:complexType>
      <xs:attribute name="count" type="xs:integer"/>
      <xs:attribute name="repeat" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="kit">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="effect"/>
        <xs:element ref="game-mode"/>
        <xs:element ref="gamemode"/>
        <xs:element ref="if"/>
        <xs:element ref="item"/>
        <xs:element ref="kit"/>
        <xs:element ref="potion"/>
        <xs:element ref="boots"/>
        <xs:element ref="chestplate"/>
        <xs:element ref="clear"/>
        <xs:element ref="clear-items"/>
        <xs:element ref="double-jump"/>
        <xs:element ref="fly"/>
        <xs:element ref="foodlevel"/>
        <xs:element ref="force"/>
        <xs:element ref="head"/>
        <xs:element ref="health"/>
        <xs:element ref="helmet"/>
        <xs:element ref="impulse"/>
        <xs:element ref="knockback-reduction"/>
        <xs:element ref="leggings"/>
        <xs:element ref="saturation"/>
        <xs:element ref="shield"/>
        <xs:element ref="unless"/>
        <xs:element ref="walk-speed"/>
      </xs:choice>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="force" type="xs:boolean"/>
      <xs:attribute name="id"/>
      <xs:attribute name="lend-kit" type="xs:boolean"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="parent" type="xs:string"/>
      <xs:attribute name="parents"/>
      <xs:attribute name="potion-particles" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="boots">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="attribute"/>
        <xs:element ref="enchantment"/>
      </xs:choice>
      <xs:attribute name="attributes" type="xs:NMTOKEN"/>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="durability" type="xs:integer"/>
      <xs:attribute name="enchantment" type="enchantmentLevelType"/>
      <xs:attribute name="lock" type="xs:boolean"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="lore"/>
      <xs:attribute name="material" type="itemType"/>
      <xs:attribute name="name"/>
      <xs:attribute name="prevent-sharing" type="xs:boolean"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="chestplate">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="attribute"/>
        <xs:element ref="enchantment"/>
      </xs:choice>
      <xs:attribute name="attributes" type="xs:NMTOKEN"/>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="enchantment" type="enchantmentLevelType"/>
      <xs:attribute name="enchantments" type="xs:NMTOKEN"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="lore"/>
      <xs:attribute name="material" type="itemType"/>
      <xs:attribute name="name"/>
      <xs:attribute name="prevent-sharing" type="xs:boolean"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="clear">
    <xs:complexType/>
  </xs:element>
  <xs:element name="clear-items">
    <xs:complexType/>
  </xs:element>
  <xs:element name="double-jump">
    <xs:complexType>
      <xs:attribute name="enabled" type="xs:boolean"/>
      <xs:attribute name="power" type="xs:decimal"/>
      <xs:attribute name="recharge-before-landing" type="xs:boolean"/>
      <xs:attribute name="recharge-time" type="timeType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fly">
    <xs:complexType>
      <xs:attribute name="can-fly" type="xs:boolean"/>
      <xs:attribute name="fly-speed" type="xs:decimal"/>
      <xs:attribute name="flying" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="foodlevel" type="xs:integer"/>
  <xs:element name="force">
    <xs:complexType mixed="true">
      <xs:attribute name="pitch" type="xs:boolean"/>
      <xs:attribute name="yaw" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="head">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="can-destroy"/>
        <xs:element ref="can-place-on"/>
      </xs:sequence>
      <xs:attribute name="amount" type="xs:integer"/>
      <xs:attribute name="lore" use="required"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="show-can-destroy" type="xs:boolean"/>
      <xs:attribute name="show-can-place-on" type="xs:boolean"/>
      <xs:attribute name="skin" type="xs:base64Binary"/>
      <xs:attribute name="slot" type="inventorySlot"/>
      <xs:attribute name="uuid" type="uuidType" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="health" type="xs:integer"/>
  <xs:element name="helmet">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="enchantment"/>
      </xs:sequence>
      <xs:attribute name="attributes" type="xs:NMTOKEN"/>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="enchantment" type="enchantmentLevelType"/>
      <xs:attribute name="lock" type="xs:boolean"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="lore"/>
      <xs:attribute name="material" type="itemType"/>
      <xs:attribute name="name"/>
      <xs:attribute name="prevent-sharing" type="xs:boolean"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="impulse">
    <xs:complexType mixed="true">
      <xs:attribute name="pitch" type="xs:boolean"/>
      <xs:attribute name="yaw" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="knockback-reduction" type="xs:decimal"/>
  <xs:element name="leggings">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="attribute"/>
        <xs:element ref="enchantment"/>
      </xs:choice>
      <xs:attribute name="color" type="hexType"/>
      <xs:attribute name="damage" type="xs:integer"/>
      <xs:attribute name="enchantment" type="enchantmentLevelType"/>
      <xs:attribute name="lock" type="xs:boolean"/>
      <xs:attribute name="locked" type="xs:boolean"/>
      <xs:attribute name="material" type="itemType"/>
      <xs:attribute name="name"/>
      <xs:attribute name="prevent-sharing" type="xs:boolean"/>
      <xs:attribute name="show-attributes" type="xs:boolean"/>
      <xs:attribute name="unbreakable" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="saturation" type="xs:integer"/>
  <xs:element name="shield">
    <xs:complexType>
      <xs:attribute name="delay" type="xs:NMTOKEN"/>
      <xs:attribute name="health" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="unless">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="item"/>
      </xs:sequence>
      <xs:attribute name="april-fools" type="xs:boolean"/>
      <xs:attribute name="halloween" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="walk-speed" type="xs:decimal"/>
  <xs:element name="author">
    <xs:complexType mixed="true">
      <xs:attribute name="uuid" type="uuidType"/>
      <xs:attribute name="contribution"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="respawn">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="message"/>
      </xs:sequence>
      <xs:attribute name="auto" type="xs:boolean"/>
      <xs:attribute name="blackout" type="xs:boolean"/>
      <xs:attribute name="delay" type="xs:NMTOKEN"/>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="freeze" type="xs:NMTOKEN"/>
      <xs:attribute name="message"/>
      <xs:attribute name="spectate" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="regions">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="above"/>
        <xs:element ref="apply"/>
        <xs:element ref="below"/>
        <xs:element ref="block"/>
        <xs:element ref="circle"/>
        <xs:element ref="complement"/>
        <xs:element ref="cuboid"/>
        <xs:element ref="cylinder"/>
        <xs:element ref="intersect"/>
        <xs:element ref="mirror"/>
        <xs:element ref="negative"/>
        <xs:element ref="point"/>
        <xs:element ref="rectangle"/>
        <xs:element ref="region"/>
        <xs:element ref="sphere"/>
        <xs:element ref="translate"/>
        <xs:element ref="union"/>
      </xs:choice>
      <xs:attribute name="angle"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="pitch" type="xs:integer"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="class">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="kit"/>
      </xs:sequence>
      <xs:attribute name="default" type="xs:boolean"/>
      <xs:attribute name="description"/>
      <xs:attribute name="icon"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="longdescription"/>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="flags">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="flags"/>
        <xs:element ref="net"/>
        <xs:element ref="post"/>
        <xs:element ref="flag"/>
      </xs:choice>
      <xs:attribute name="carry-message"/>
      <xs:attribute name="color" type="textType"/>
      <xs:attribute name="drop-kit" type="xs:string"/>
      <xs:attribute name="drop-on-water" type="xs:boolean"/>
      <xs:attribute name="flag-proximity-metric"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="permanent" type="xs:boolean"/>
      <xs:attribute name="pickup-filter" type="xs:string"/>
      <xs:attribute name="pickup-kit" type="xs:string"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="recover-time" type="timeType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="flag">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="net"/>
        <xs:element ref="post"/>
        <xs:element ref="carry-kit"/>
        <xs:element ref="carry-message"/>
        <xs:element ref="drop-kit"/>
        <xs:element ref="pickup-kit"/>
      </xs:choice>
      <xs:attribute name="carry-kit" type="xs:string"/>
      <xs:attribute name="carry-message"/>
      <xs:attribute name="color" type="textType"/>
      <xs:attribute name="drop-kit" type="xs:string"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="pickup-filter" type="xs:string"/>
      <xs:attribute name="pickup-kit" type="xs:string"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="points-rate" type="xs:decimal"/>
      <xs:attribute name="post" type="xs:string"/>
      <xs:attribute name="required" type="xs:boolean"/>
      <xs:attribute name="return-time" type="timeType"/>
      <xs:attribute name="shared" type="xs:boolean"/>
      <xs:attribute name="show" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="carry-kit">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="effect"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="carry-message" type="xs:string"/>
  <xs:element name="drop-kit">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="potion"/>
      </xs:sequence>
      <xs:attribute name="force" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pickup-kit">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="potion"/>
      </xs:sequence>
      <xs:attribute name="force" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="spawns">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="spawn"/>
          <xs:element ref="spawns"/>
          <xs:element ref="default"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="filter"/>
      </xs:sequence>
      <xs:attribute name="angle"/>
      <xs:attribute name="exclusive" type="xs:boolean"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="pitch" type="xs:integer"/>
      <xs:attribute name="safe" type="xs:boolean"/>
      <xs:attribute name="spread" type="xs:boolean"/>
      <xs:attribute name="team" type="xs:string"/>
      <xs:attribute name="unique" type="xs:boolean"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="default">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="region"/>
        <xs:element ref="regions"/>
      </xs:choice>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="pitch" type="xs:integer"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="team">
    <xs:complexType mixed="true">
      <xs:attribute name="id"/>
      <xs:attribute name="color" type="textType"/>
      <xs:attribute name="min" type="xs:integer"/>
      <xs:attribute name="max" type="xs:integer"/>
      <xs:attribute name="max-overfill" type="xs:integer"/>
      <xs:attribute name="plural" type="xs:boolean"/>
      <xs:attribute name="show-name-tags" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="message">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="line"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="line" type="xs:string"/>
  <xs:element name="point">
    <xs:complexType mixed="true">
      <xs:attribute name="angle"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="pitch" type="xs:integer"/>
      <xs:attribute name="yaw" type="xs:decimal"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="structures">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="structures"/>
        <xs:element ref="dynamic"/>
        <xs:element ref="structure"/>
      </xs:choice>
      <xs:attribute name="air" type="xs:boolean"/>
      <xs:attribute name="location"/>
      <xs:attribute name="offset"/>
      <xs:attribute name="trigger" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dynamic">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="filter"/>
      </xs:sequence>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="location"/>
      <xs:attribute name="offset"/>
      <xs:attribute name="structure" type="xs:string"/>
      <xs:attribute name="trigger" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="structure">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
      </xs:sequence>
      <xs:attribute name="air" type="xs:boolean"/>
      <xs:attribute name="clear" type="xs:boolean"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="origin"/>
      <xs:attribute name="region" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="wearing">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="item"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="carrying-flag">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="id" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="time">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="timeType">
          <xs:attribute name="id" type="xs:string"/>
          <xs:attribute name="result" type="xs:string"/>
          <xs:attribute name="results" type="xs:string"/>
          <xs:attribute name="show" type="xs:boolean"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="random">
    <xs:complexType mixed="true">
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="allow">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="any"/>
        <xs:element ref="holding"/>
        <xs:element ref="material"/>
        <xs:element ref="spawn"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="deny">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="all"/>
        <xs:element ref="any"/>
        <xs:element ref="carrying-flag"/>
        <xs:element ref="cause"/>
        <xs:element ref="filter"/>
        <xs:element ref="material"/>
        <xs:element ref="not"/>
        <xs:element ref="region"/>
        <xs:element ref="team"/>
        <xs:element ref="void"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="complement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="complement"/>
        <xs:choice>
          <xs:element ref="everywhere"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="cylinder"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="negative"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="union"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="region"/>
        <xs:element minOccurs="0" ref="above"/>
        <xs:element minOccurs="0" ref="below"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="circle"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="rectangle"/>
        <xs:choice>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="block"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="cuboid"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="union">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="sphere"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="block"/>
          <xs:element ref="circle"/>
          <xs:element ref="complement"/>
          <xs:element ref="cuboid"/>
          <xs:element ref="intersect"/>
          <xs:element ref="mirror"/>
          <xs:element ref="rectangle"/>
          <xs:element ref="region"/>
          <xs:element ref="translate"/>
          <xs:element ref="union"/>
          <xs:element ref="below"/>
          <xs:element ref="above"/>
          <xs:element ref="negative"/>
          <xs:element ref="point"/>
          <xs:element ref="cylinder"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id"/>
      <xs:attribute name="message"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="intersect">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
        <xs:choice minOccurs="0">
          <xs:element ref="above"/>
          <xs:element ref="cuboid"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="negative"/>
          <xs:element ref="rectangle"/>
          <xs:element ref="half"/>
          <xs:choice maxOccurs="unbounded">
            <xs:element ref="below"/>
            <xs:element ref="union"/>
          </xs:choice>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="half">
    <xs:complexType>
      <xs:attribute name="normal" type="xzType" use="required"/>
      <xs:attribute name="origin" type="xzType" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rectangle">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="min" type="xzType" use="required"/>
      <xs:attribute name="max" type="xzType" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="carrying">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="item"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="holding">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="item"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="apply">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="cylinder"/>
          <xs:element ref="everywhere"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="cuboid"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="region"/>
        <xs:choice minOccurs="0">
          <xs:element ref="block"/>
          <xs:element ref="filter"/>
          <xs:element ref="kit"/>
          <xs:element ref="negative"/>
          <xs:element ref="rectangle"/>
          <xs:element ref="anywhere"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="block" type="xs:string"/>
      <xs:attribute name="block-break" type="xs:string"/>
      <xs:attribute name="block-physics" type="xs:string"/>
      <xs:attribute name="block-place" type="xs:string"/>
      <xs:attribute name="enter" type="xs:string"/>
      <xs:attribute name="filter" type="xs:string"/>
      <xs:attribute name="force" type="xs:boolean"/>
      <xs:attribute name="kit"/>
      <xs:attribute name="leave" type="xs:string"/>
      <xs:attribute name="lend-kit" type="xs:string"/>
      <xs:attribute name="message"/>
      <xs:attribute name="place" type="xs:string"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="sound" type="xs:boolean"/>
      <xs:attribute name="use" type="xs:string"/>
      <xs:attribute name="velocity"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="anywhere">
    <xs:complexType/>
  </xs:element>
  <xs:element name="contributor">
    <xs:complexType mixed="true">
      <xs:attribute name="uuid" type="uuidType"/>
      <xs:attribute name="contribution"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="game-mode" type="xs:string"/>
  <xs:element name="attribute">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="amount" type="xs:decimal"/>
          <xs:attribute name="operation" type="xs:string"/>
          <!--<xs:attribute name="slot" type="xs:string"/>-->
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--enchantmentType-->
  <xs:element name="enchantment">
    <xs:complexType mixed="true">
    	<xs:simpleContent>
		  <xs:extension base="enchantmentType">
		  	<xs:attribute name="level" type="xs:integer"/>
		  </xs:extension>
		</xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="can-destroy">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="all-blocks"/>
        <xs:element maxOccurs="unbounded" ref="material"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="can-place-on">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="all-blocks"/>
        <xs:element maxOccurs="unbounded" ref="material"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="all-blocks">
    <xs:complexType/>
  </xs:element>
  <xs:element name="flag-carried" type="xs:string"/>
  <xs:element name="flag-returned" type="xs:string"/>
  <xs:element name="void">
    <xs:complexType/>
  </xs:element>
  <xs:element name="above">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="x" type="xs:integer"/>
      <xs:attribute name="y" type="xs:integer"/>
      <xs:attribute name="z" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="circle">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="center" type="xzType" use="required"/>
      <xs:attribute name="radius" type="xs:decimal" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="negative">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="cuboid"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="complement"/>
        <xs:choice minOccurs="0">
          <xs:element ref="cylinder"/>
          <xs:element ref="intersect"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="union"/>
        <xs:choice>
          <xs:element ref="circle"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="region"/>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="mirror"/>
            <xs:element ref="rectangle"/>
          </xs:choice>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="cylinder">
    <xs:complexType>
      <xs:attribute name="id"/>
      <xs:attribute name="base" type="xyzType" use="required"/>
      <xs:attribute name="height" type="xs:NMTOKEN" use="required"/>
      <xs:attribute name="radius" type="xs:decimal" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mirror">
    <xs:complexType>
      <xs:choice minOccurs="0">
        <xs:element ref="rectangle"/>
        <xs:element ref="region"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="normal" use="required"/>
      <xs:attribute name="origin"/>
      <xs:attribute name="region" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sphere">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="origin" type="xyzType" use="required"/>
      <xs:attribute name="radius" type="xs:decimal"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="block">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="all"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="location"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="spawn">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="cuboid"/>
        <xs:element ref="region"/>
        <xs:element ref="regions"/>
      </xs:choice>
      <xs:attribute name="angle"/>
      <xs:attribute name="filter" type="xs:NMTOKEN"/>
      <xs:attribute name="force" type="xs:boolean"/>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="kit" type="xs:string"/>
      <xs:attribute name="outside" type="xs:boolean"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="safe" type="xs:boolean"/>
      <xs:attribute name="spread" type="xs:boolean"/>
      <xs:attribute name="team"/>
      <xs:attribute name="yaw" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="nowhere">
    <xs:complexType/>
  </xs:element>
  <xs:element name="post">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="block"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="yaw" type="xs:integer"/>
      <xs:attribute name="pickup-filter" type="xs:string"/>
      <xs:attribute name="respawn-speed" type="xs:integer"/>
      <xs:attribute name="recover-time" type="timeType"/>
      <xs:attribute name="respawn-time" type="timeType"/>
      <xs:attribute name="return-time" type="timeType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="net">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="region"/>
        <xs:element minOccurs="0" ref="capture-filter"/>
      </xs:sequence>
      <xs:attribute name="capture-filter" type="xs:string"/>
      <xs:attribute name="deny-message"/>
      <xs:attribute name="flag"/>
      <xs:attribute name="flags"/>
      <xs:attribute name="owner" type="xs:string"/>
      <xs:attribute name="points" type="xs:integer"/>
      <xs:attribute name="post" type="xs:string"/>
      <xs:attribute name="region" type="xs:string"/>
      <xs:attribute name="rescue" type="xs:string"/>
      <xs:attribute name="respawn-filter" type="xs:string"/>
      <xs:attribute name="respawn-together" type="xs:boolean"/>
      <xs:attribute name="return" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="entityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="dropped item"/>
      <xs:enumeration value="experience orb"/>
      <xs:enumeration value="leash hitch"/>
      <xs:enumeration value="painting"/>
      <xs:enumeration value="arrow"/>
      <xs:enumeration value="snowball"/>
      <xs:enumeration value="fireball"/>
      <xs:enumeration value="small fireball"/>
      <xs:enumeration value="ender pearl"/>
      <xs:enumeration value="ender signal"/>
      <xs:enumeration value="thrown exp bottle"/>
      <xs:enumeration value="item frame"/>
      <xs:enumeration value="wither skull"/>
      <xs:enumeration value="primed tnt"/>
      <xs:enumeration value="falling block"/>
      <xs:enumeration value="firework"/>
      <xs:enumeration value="tipped arrow"/>
      <xs:enumeration value="spectral arrow"/>
      <xs:enumeration value="shulker bullet"/>
      <xs:enumeration value="dragon fireball"/>
      <xs:enumeration value="armor stand"/>
      <xs:enumeration value="minecart command"/>
      <xs:enumeration value="boat"/>
      <xs:enumeration value="minecart"/>
      <xs:enumeration value="minecart chest"/>
      <xs:enumeration value="minecart furnace"/>
      <xs:enumeration value="minecart tnt"/>
      <xs:enumeration value="minecart hopper"/>
      <xs:enumeration value="minecart mob spawner"/>
      <xs:enumeration value="ender crystal"/>
      <xs:enumeration value="splash potion"/>
      <xs:enumeration value="lingering potion"/>
      <xs:enumeration value="area effect cloud"/>
      <xs:enumeration value="egg"/>
      <xs:enumeration value="fishing hook"/>
      <xs:enumeration value="lightning"/>
      <xs:enumeration value="weather"/>
      <xs:enumeration value="player"/>
      <xs:enumeration value="complex part"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="creatureType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="creeper"/>
      <xs:enumeration value="skeleton"/>
      <xs:enumeration value="spider"/>
      <xs:enumeration value="giant"/>
      <xs:enumeration value="zombie"/>
      <xs:enumeration value="slime"/>
      <xs:enumeration value="ghast"/>
      <xs:enumeration value="pig zombie"/>
      <xs:enumeration value="enderman"/>
      <xs:enumeration value="cave spider"/>
      <xs:enumeration value="silverfish"/>
      <xs:enumeration value="blaze"/>
      <xs:enumeration value="magma cube"/>
      <xs:enumeration value="ender dragon"/>
      <xs:enumeration value="wither"/>
      <xs:enumeration value="bat"/>
      <xs:enumeration value="witch"/>
      <xs:enumeration value="endermite"/>
      <xs:enumeration value="guardian"/>
      <xs:enumeration value="shulker"/>
      <xs:enumeration value="pig"/>
      <xs:enumeration value="sheep"/>
      <xs:enumeration value="cow"/>
      <xs:enumeration value="chicken"/>
      <xs:enumeration value="squid"/>
      <xs:enumeration value="wolf"/>
      <xs:enumeration value="mushroom cow"/>
      <xs:enumeration value="snowman"/>
      <xs:enumeration value="ocelot"/>
      <xs:enumeration value="iron golem"/>
      <xs:enumeration value="horse"/>
      <xs:enumeration value="rabbit"/>
      <xs:enumeration value="villager"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="entityTypes">
    <xs:union memberTypes="entityType creatureType"/>
  </xs:simpleType>
  <xs:simpleType name="enchantmentType">
  	<xs:union memberTypes="enchantmentPattern enchantmentEnum"/>
  </xs:simpleType>
  <xs:simpleType name="enchantmentLevelType">
    <xs:union memberTypes="enchantmentEnum enchantmentLevelPattern"/>
  </xs:simpleType>
  <!--enchantment types-->
  <xs:simpleType name="enchantmentPattern">
  	<xs:restriction base="xs:string">
  		<xs:pattern value="([pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][eE][nN][vV][iI][rR][oO][nN][mM][eE][nN][tT][aA][lL]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][fF][iI][rR][eE]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][fF][aA][lL][lL]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][eE][xX][pP][lL][oO][sS][iI][oO][nN][sS]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][pP][rR][oO][jJ][eE][cC][tT][iI][lL][eE]|[oO][xX][yY][gG][eE][nN]|[wW][aA][tT][eE][rR][ _][wW][oO][rR][kK][eE][rR]|[tT][hH][oO][rR][nN][sS]|[dD][eE][pP][tT][hH][ _][sS][tT][rR][iI][dD][eE][rR]|[fF][rR][oO][sS][tT][ _][wW][aA][lL][kK][eE][rR]|[dD][aA][mM][aA][gG][eE][ _][aA][lL][lL]|[dD][aA][mM][aA][gG][eE][ _][uU][nN][dD][eE][aA][dD]|[dD][aA][mM][aA][gG][eE][ _][aA][rR][tT][hH][rR][oO][pP][oO][dD][sS]|[kK][nN][oO][cC][kK][bB][aA][cC][kK]|[fF][iI][rR][eE][ _][aA][sS][pP][eE][cC][tT]|[lL][oO][oO][tT][ _][bB][oO][nN][uU][sS][ _][mM][oO][bB][sS]|[dD][iI][gG][ _][sS][pP][eE][eE][dD]|[sS][iI][lL][kK][ _][tT][oO][uU][cC][hH]|[dD][uU][rR][aA][bB][iI][lL][iI][tT][yY]|[lL][oO][oO][tT][ _][bB][oO][nN][uU][sS][ _][bB][lL][oO][cC][kK][sS]|[aA][rR][rR][oO][wW][ _][dD][aA][mM][aA][gG][eE]|[aA][rR][rR][oO][wW][ _][kK][nN][oO][cC][kK][bB][aA][cC][kK]|[aA][rR][rR][oO][wW][ _][fF][iI][rR][eE]|[aA][rR][rR][oO][wW][ _][iI][nN][fF][iI][nN][iI][tT][eE]|[lL][uU][cC][kK]|[lL][uU][rR][eE]|[mM][eE][nN][dD][iI][nN][gG]|[vV][aA][nN][iI][sS][hH][iI][nN][gG][ _][cC][uU][rR][sS][eE])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="enchantmentLevelPattern">
    <xs:restriction base="xs:string">
      <xs:pattern value="([pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][eE][nN][vV][iI][rR][oO][nN][mM][eE][nN][tT][aA][lL]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][fF][iI][rR][eE]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][fF][aA][lL][lL]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][eE][xX][pP][lL][oO][sS][iI][oO][nN][sS]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN][ _][pP][rR][oO][jJ][eE][cC][tT][iI][lL][eE]|[oO][xX][yY][gG][eE][nN]|[wW][aA][tT][eE][rR][ _][wW][oO][rR][kK][eE][rR]|[tT][hH][oO][rR][nN][sS]|[dD][eE][pP][tT][hH][ _][sS][tT][rR][iI][dD][eE][rR]|[fF][rR][oO][sS][tT][ _][wW][aA][lL][kK][eE][rR]|[dD][aA][mM][aA][gG][eE][ _][aA][lL][lL]|[dD][aA][mM][aA][gG][eE][ _][uU][nN][dD][eE][aA][dD]|[dD][aA][mM][aA][gG][eE][ _][aA][rR][tT][hH][rR][oO][pP][oO][dD][sS]|[kK][nN][oO][cC][kK][bB][aA][cC][kK]|[fF][iI][rR][eE][ _][aA][sS][pP][eE][cC][tT]|[lL][oO][oO][tT][ _][bB][oO][nN][uU][sS][ _][mM][oO][bB][sS]|[dD][iI][gG][ _][sS][pP][eE][eE][dD]|[sS][iI][lL][kK][ _][tT][oO][uU][cC][hH]|[dD][uU][rR][aA][bB][iI][lL][iI][tT][yY]|[lL][oO][oO][tT][ _][bB][oO][nN][uU][sS][ _][bB][lL][oO][cC][kK][sS]|[aA][rR][rR][oO][wW][ _][dD][aA][mM][aA][gG][eE]|[aA][rR][rR][oO][wW][ _][kK][nN][oO][cC][kK][bB][aA][cC][kK]|[aA][rR][rR][oO][wW][ _][fF][iI][rR][eE]|[aA][rR][rR][oO][wW][ _][iI][nN][fF][iI][nN][iI][tT][eE]|[lL][uU][cC][kK]|[lL][uU][rR][eE]|[mM][eE][nN][dD][iI][nN][gG]|[vV][aA][nN][iI][sS][hH][iI][nN][gG][ _][cC][uU][rR][sS][eE]|[pP][rR][oO][tT][eE][cC][tT][iI][oO][nN]|[fF][iI][rR][eE][ _][pP][rR][oO][tT][eE][cC][tT][iI][oO][nN]|[fF][eE][aA][tT][hH][eE][rR][ _][fF][aA][lL][lL][iI][nN][gG]|[bB][lL][aA][sS][tT][ _][pP][rR][oO][tT][eE][cC][tT][iI][oO][nN]|[pP][rR][oO][jJ][eE][cC][tT][iI][lL][eE][ _][pP][rR][oO][tT][eE][cC][tT][iI][oO][nN]|[rR][eE][sS][pP][iI][rR][aA][tT][iI][oO][nN]|[aA][qQ][uU][aA][ _][aA][fF][fF][iI][nN][iI][tT][yY]|[tT][hH][oO][rR][nN][sS]|[dD][eE][pP][tT][hH][ _][sS][tT][rR][iI][dD][eE][rR]|[fF][rR][oO][sS][tT][ _][wW][aA][lL][kK][eE][rR]|[cC][uU][rR][sS][eE][ _][oO][fF][ _][bB][iI][nN][dD][iI][nN][gG]|[sS][hH][aA][rR][pP][nN][eE][sS][sS]|[sS][mM][iI][tT][eE]|[bB][aA][nN][eE][ _][oO][fF][ _][aA][rR][tT][hH][rR][oO][pP][oO][dD][sS]|[kK][nN][oO][cC][kK][bB][aA][cC][kK]|[fF][iI][rR][eE][ _][aA][sS][pP][eE][cC][tT]|[lL][oO][oO][tT][iI][nN][gG]|[eE][fF][fF][iI][cC][iI][eE][nN][cC][yY]|[sS][iI][lL][kK][ _][tT][oO][uU][cC][hH]|[uU][nN][bB][rR][eE][aA][kK][iI][nN][gG]|[fF][oO][rR][tT][uU][nN][eE]|[pP][oO][wW][eE][rR]|[pP][uU][nN][cC][hH]|[fF][lL][aA][mM][eE]|[iI][nN][fF][iI][nN][iI][tT][yY]|[lL][uU][cC][kK][ _][oO][fF][ _][tT][hH][eE][ _][sS][eE][aA]|[lL][uU][rR][eE]|[mM][eE][nN][dD][iI][nN][gG]|[cC][uU][rR][sS][eE][ _][oO][fF][ _][vV][aA][nN][iI][sS][hH][iI][nN][gG])(:[0-9])?"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="enchantmentEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="protection"/>
        <xs:enumeration value="protection fire"/>
        <xs:enumeration value="protection fall"/>
        <xs:enumeration value="feather_falling"/>
        <xs:enumeration value="blast_protection"/>
        <xs:enumeration value="projectile_protection"/>
        <xs:enumeration value="respiration"/>
        <xs:enumeration value="aqua_affinity"/>
        <xs:enumeration value="thorns"/>
        <xs:enumeration value="depth_strider"/>
        <xs:enumeration value="frost_walker"/>
        <xs:enumeration value="curse_of_binding"/>
        <xs:enumeration value="sharpness"/>
        <xs:enumeration value="smite"/>
        <xs:enumeration value="bane_of_arthropods"/>
        <xs:enumeration value="knockback"/>
        <xs:enumeration value="fire_aspect"/>
        <xs:enumeration value="looting"/>
        <xs:enumeration value="efficiency"/>
        <xs:enumeration value="silk_touch"/>
        <xs:enumeration value="unbreaking"/>
        <xs:enumeration value="fortune"/>
        <xs:enumeration value="power"/>
        <xs:enumeration value="punch"/>
        <xs:enumeration value="flame"/>
        <xs:enumeration value="infinity"/>
        <xs:enumeration value="luck_of_the_sea"/>
        <xs:enumeration value="lure"/>
        <xs:enumeration value="mending"/>
        <xs:enumeration value="curse_of_vanishing"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textType">
    <xs:union memberTypes="textEnum textPattern"/>
  </xs:simpleType>
  <xs:simpleType name="textEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="black"/>
      <xs:enumeration value="dark blue"/>
      <xs:enumeration value="dark green"/>
      <xs:enumeration value="dark aqua"/>
      <xs:enumeration value="dark red"/>
      <xs:enumeration value="dark purple"/>
      <xs:enumeration value="gold"/>
      <xs:enumeration value="gray"/>
      <xs:enumeration value="dark gray"/>
      <xs:enumeration value="blue"/>
      <xs:enumeration value="green"/>
      <xs:enumeration value="aqua"/>
      <xs:enumeration value="red"/>
      <xs:enumeration value="light purple"/>
      <xs:enumeration value="yellow"/>
      <xs:enumeration value="white"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textPattern">
    <xs:restriction base="xs:string">
      <xs:pattern value="([bB][lL][aA][cC][kK]|[dD][aA][rR][kK][ _][bB][lL][uU][eE]|[dD][aA][rR][kK][ _][gG][rR][eE][eE][nN]|[dD][aA][rR][kK][ _][aA][qQ][uU][aA]|[dD][aA][rR][kK][ _][rR][eE][dD]|[dD][aA][rR][kK][ _][pP][uU][rR][pP][lL][eE]|[gG][oO][lL][dD]|[gG][rR][aA][yY]|[dD][aA][rR][kK][ _][gG][rR][aA][yY]|[bB][lL][uU][eE]|[gG][rR][eE][eE][nN]|[aA][qQ][uU][aA]|[rR][eE][dD]|[lL][iI][gG][hH][tT][ _][pP][uU][rR][pP][lL][eE]|[yY][eE][lL][lL][oO][wW]|[wW][hH][iI][tT][eE])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dyeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="white"/>
      <xs:enumeration value="orange"/>
      <xs:enumeration value="magenta"/>
      <xs:enumeration value="light blue"/>
      <xs:enumeration value="yellow"/>
      <xs:enumeration value="lime"/>
      <xs:enumeration value="pink"/>
      <xs:enumeration value="gray"/>
      <xs:enumeration value="silver"/>
      <xs:enumeration value="cyan"/>
      <xs:enumeration value="purple"/>
      <xs:enumeration value="blue"/>
      <xs:enumeration value="brown"/>
      <xs:enumeration value="green"/>
      <xs:enumeration value="red"/>
      <xs:enumeration value="black"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- Test Items Incomplete -->
  <xs:simpleType name="itemType">
    <xs:union memberTypes="itemStatic itemPattern"/>
  </xs:simpleType>
  <xs:simpleType name="itemStatic">
    <xs:restriction base="xs:string">
      <xs:enumeration value="air"/>
      <xs:enumeration value="stone"/>
      <xs:enumeration value="grass"/>
      <xs:enumeration value="dirt"/>
      <xs:enumeration value="cobblestone"/>
      <xs:enumeration value="wood"/>
      <xs:enumeration value="sapling"/>
      <xs:enumeration value="bedrock"/>
      <xs:enumeration value="water"/>
      <xs:enumeration value="stationary water"/>
      <xs:enumeration value="lava"/>
      <xs:enumeration value="stationary lava"/>
      <xs:enumeration value="sand"/>
      <xs:enumeration value="gravel"/>
      <xs:enumeration value="gold ore"/>
      <xs:enumeration value="iron ore"/>
      <xs:enumeration value="coal ore"/>
      <xs:enumeration value="log"/>
      <xs:enumeration value="leaves"/>
      <xs:enumeration value="sponge"/>
      <xs:enumeration value="glass"/>
      <xs:enumeration value="lapis ore"/>
      <xs:enumeration value="lapis block"/>
      <xs:enumeration value="dispenser"/>
      <xs:enumeration value="sandstone"/>
      <xs:enumeration value="note block"/>
      <xs:enumeration value="bed block"/>
      <xs:enumeration value="powered rail"/>
      <xs:enumeration value="detector rail"/>
      <xs:enumeration value="piston sticky base"/>
      <xs:enumeration value="web"/>
      <xs:enumeration value="long grass"/>
      <xs:enumeration value="dead bush"/>
      <xs:enumeration value="piston base"/>
      <xs:enumeration value="piston extension"/>
      <xs:enumeration value="wool"/>
      <xs:enumeration value="piston moving piece"/>
      <xs:enumeration value="yellow flower"/>
      <xs:enumeration value="red rose"/>
      <xs:enumeration value="brown mushroom"/>
      <xs:enumeration value="red mushroom"/>
      <xs:enumeration value="gold block"/>
      <xs:enumeration value="iron block"/>
      <xs:enumeration value="double step"/>
      <xs:enumeration value="step"/>
      <xs:enumeration value="brick"/>
      <xs:enumeration value="tnt"/>
      <xs:enumeration value="bookshelf"/>
      <xs:enumeration value="mossy cobblestone"/>
      <xs:enumeration value="obsidian"/>
      <xs:enumeration value="torch"/>
      <xs:enumeration value="fire"/>
      <xs:enumeration value="mob spawner"/>
      <xs:enumeration value="wood stairs"/>
      <xs:enumeration value="chest"/>
      <xs:enumeration value="redstone wire"/>
      <xs:enumeration value="diamond ore"/>
      <xs:enumeration value="diamond block"/>
      <xs:enumeration value="workbench"/>
      <xs:enumeration value="crops"/>
      <xs:enumeration value="soil"/>
      <xs:enumeration value="furnace"/>
      <xs:enumeration value="burning furnace"/>
      <xs:enumeration value="sign post"/>
      <xs:enumeration value="wooden door"/>
      <xs:enumeration value="ladder"/>
      <xs:enumeration value="rails"/>
      <xs:enumeration value="cobblestone stairs"/>
      <xs:enumeration value="wall sign"/>
      <xs:enumeration value="lever"/>
      <xs:enumeration value="stone plate"/>
      <xs:enumeration value="iron door block"/>
      <xs:enumeration value="wood plate"/>
      <xs:enumeration value="redstone ore"/>
      <xs:enumeration value="glowing redstone ore"/>
      <xs:enumeration value="redstone torch off"/>
      <xs:enumeration value="redstone torch on"/>
      <xs:enumeration value="stone button"/>
      <xs:enumeration value="snow"/>
      <xs:enumeration value="ice"/>
      <xs:enumeration value="snow block"/>
      <xs:enumeration value="cactus"/>
      <xs:enumeration value="clay"/>
      <xs:enumeration value="sugar cane block"/>
      <xs:enumeration value="jukebox"/>
      <xs:enumeration value="fence"/>
      <xs:enumeration value="pumpkin"/>
      <xs:enumeration value="netherrack"/>
      <xs:enumeration value="soul sand"/>
      <xs:enumeration value="glowstone"/>
      <xs:enumeration value="portal"/>
      <xs:enumeration value="jack o lantern"/>
      <xs:enumeration value="cake block"/>
      <xs:enumeration value="diode block off"/>
      <xs:enumeration value="diode block on"/>
      <xs:enumeration value="stained glass"/>
      <xs:enumeration value="trap door"/>
      <xs:enumeration value="monster eggs"/>
      <xs:enumeration value="smooth brick"/>
      <xs:enumeration value="huge mushroom 1"/>
      <xs:enumeration value="huge mushroom 2"/>
      <xs:enumeration value="iron fence"/>
      <xs:enumeration value="thin glass"/>
      <xs:enumeration value="melon block"/>
      <xs:enumeration value="pumpkin stem"/>
      <xs:enumeration value="melon stem"/>
      <xs:enumeration value="vine"/>
      <xs:enumeration value="fence gate"/>
      <xs:enumeration value="brick stairs"/>
      <xs:enumeration value="smooth stairs"/>
      <xs:enumeration value="mycel"/>
      <xs:enumeration value="water lily"/>
      <xs:enumeration value="nether brick"/>
      <xs:enumeration value="nether fence"/>
      <xs:enumeration value="nether brick stairs"/>
      <xs:enumeration value="nether warts"/>
      <xs:enumeration value="enchantment table"/>
      <xs:enumeration value="brewing stand"/>
      <xs:enumeration value="cauldron"/>
      <xs:enumeration value="ender portal"/>
      <xs:enumeration value="ender portal frame"/>
      <xs:enumeration value="ender stone"/>
      <xs:enumeration value="dragon egg"/>
      <xs:enumeration value="redstone lamp off"/>
      <xs:enumeration value="redstone lamp on"/>
      <xs:enumeration value="wood double step"/>
      <xs:enumeration value="wood step"/>
      <xs:enumeration value="cocoa"/>
      <xs:enumeration value="sandstone stairs"/>
      <xs:enumeration value="emerald ore"/>
      <xs:enumeration value="ender chest"/>
      <xs:enumeration value="tripwire hook"/>
      <xs:enumeration value="tripwire"/>
      <xs:enumeration value="emerald block"/>
      <xs:enumeration value="spruce wood stairs"/>
      <xs:enumeration value="birch wood stairs"/>
      <xs:enumeration value="jungle wood stairs"/>
      <xs:enumeration value="command"/>
      <xs:enumeration value="beacon"/>
      <xs:enumeration value="cobble wall"/>
      <xs:enumeration value="flower pot"/>
      <xs:enumeration value="carrot"/>
      <xs:enumeration value="potato"/>
      <xs:enumeration value="wood button"/>
      <xs:enumeration value="skull"/>
      <xs:enumeration value="anvil"/>
      <xs:enumeration value="trapped chest"/>
      <xs:enumeration value="gold plate"/>
      <xs:enumeration value="iron plate"/>
      <xs:enumeration value="redstone comparator off"/>
      <xs:enumeration value="redstone comparator on"/>
      <xs:enumeration value="daylight detector"/>
      <xs:enumeration value="redstone block"/>
      <xs:enumeration value="quartz ore"/>
      <xs:enumeration value="hopper"/>
      <xs:enumeration value="quartz block"/>
      <xs:enumeration value="quartz stairs"/>
      <xs:enumeration value="activator rail"/>
      <xs:enumeration value="dropper"/>
      <xs:enumeration value="stained clay"/>
      <xs:enumeration value="stained glass pane"/>
      <xs:enumeration value="leaves 2"/>
      <xs:enumeration value="log 2"/>
      <xs:enumeration value="acacia stairs"/>
      <xs:enumeration value="dark oak stairs"/>
      <xs:enumeration value="slime block"/>
      <xs:enumeration value="barrier"/>
      <xs:enumeration value="iron trapdoor"/>
      <xs:enumeration value="prismarine"/>
      <xs:enumeration value="sea lantern"/>
      <xs:enumeration value="hay block"/>
      <xs:enumeration value="carpet"/>
      <xs:enumeration value="hard clay"/>
      <xs:enumeration value="coal block"/>
      <xs:enumeration value="packed ice"/>
      <xs:enumeration value="double plant"/>
      <xs:enumeration value="standing banner"/>
      <xs:enumeration value="wall banner"/>
      <xs:enumeration value="daylight detector inverted"/>
      <xs:enumeration value="red sandstone"/>
      <xs:enumeration value="red sandstone stairs"/>
      <xs:enumeration value="double stone slab2"/>
      <xs:enumeration value="stone slab2"/>
      <xs:enumeration value="spruce fence gate"/>
      <xs:enumeration value="birch fence gate"/>
      <xs:enumeration value="jungle fence gate"/>
      <xs:enumeration value="dark oak fence gate"/>
      <xs:enumeration value="acacia fence gate"/>
      <xs:enumeration value="spruce fence"/>
      <xs:enumeration value="birch fence"/>
      <xs:enumeration value="jungle fence"/>
      <xs:enumeration value="dark oak fence"/>
      <xs:enumeration value="acacia fence"/>
      <xs:enumeration value="spruce door"/>
      <xs:enumeration value="birch door"/>
      <xs:enumeration value="jungle door"/>
      <xs:enumeration value="acacia door"/>
      <xs:enumeration value="dark oak door"/>
      <xs:enumeration value="end rod"/>
      <xs:enumeration value="chorus plant"/>
      <xs:enumeration value="chorus flower"/>
      <xs:enumeration value="purpur block"/>
      <xs:enumeration value="purpur pillar"/>
      <xs:enumeration value="purpur stairs"/>
      <xs:enumeration value="purpur double slab"/>
      <xs:enumeration value="purpur slab"/>
      <xs:enumeration value="end bricks"/>
      <xs:enumeration value="beetroot block"/>
      <xs:enumeration value="grass path"/>
      <xs:enumeration value="end gateway"/>
      <xs:enumeration value="command repeating"/>
      <xs:enumeration value="command chain"/>
      <xs:enumeration value="frosted ice"/>
      <xs:enumeration value="magma"/>
      <xs:enumeration value="nether wart block"/>
      <xs:enumeration value="red nether brick"/>
      <xs:enumeration value="bone block"/>
      <xs:enumeration value="structure void"/>
      <xs:enumeration value="observer"/>
      <xs:enumeration value="white shulker box"/>
      <xs:enumeration value="orange shulker box"/>
      <xs:enumeration value="magenta shulker box"/>
      <xs:enumeration value="light blue shulker box"/>
      <xs:enumeration value="yellow shulker box"/>
      <xs:enumeration value="lime shulker box"/>
      <xs:enumeration value="pink shulker box"/>
      <xs:enumeration value="gray shulker box"/>
      <xs:enumeration value="silver shulker box"/>
      <xs:enumeration value="cyan shulker box"/>
      <xs:enumeration value="purple shulker box"/>
      <xs:enumeration value="blue shulker box"/>
      <xs:enumeration value="brown shulker box"/>
      <xs:enumeration value="green shulker box"/>
      <xs:enumeration value="red shulker box"/>
      <xs:enumeration value="black shulker box"/>
      <xs:enumeration value="white glazed terracotta"/>
      <xs:enumeration value="orange glazed terracotta"/>
      <xs:enumeration value="magenta glazed terracotta"/>
      <xs:enumeration value="light blue glazed terracotta"/>
      <xs:enumeration value="yellow glazed terracotta"/>
      <xs:enumeration value="lime glazed terracotta"/>
      <xs:enumeration value="pink glazed terracotta"/>
      <xs:enumeration value="gray glazed terracotta"/>
      <xs:enumeration value="silver glazed terracotta"/>
      <xs:enumeration value="cyan glazed terracotta"/>
      <xs:enumeration value="purple glazed terracotta"/>
      <xs:enumeration value="blue glazed terracotta"/>
      <xs:enumeration value="brown glazed terracotta"/>
      <xs:enumeration value="green glazed terracotta"/>
      <xs:enumeration value="red glazed terracotta"/>
      <xs:enumeration value="black glazed terracotta"/>
      <xs:enumeration value="concrete"/>
      <xs:enumeration value="concrete powder"/>
      <xs:enumeration value="structure block"/>
      <xs:enumeration value="iron spade"/>
      <xs:enumeration value="iron pickaxe"/>
      <xs:enumeration value="iron axe"/>
      <xs:enumeration value="flint and steel"/>
      <xs:enumeration value="apple"/>
      <xs:enumeration value="bow"/>
      <xs:enumeration value="arrow"/>
      <xs:enumeration value="coal"/>
      <xs:enumeration value="diamond"/>
      <xs:enumeration value="iron ingot"/>
      <xs:enumeration value="gold ingot"/>
      <xs:enumeration value="iron sword"/>
      <xs:enumeration value="wood sword"/>
      <xs:enumeration value="wood spade"/>
      <xs:enumeration value="wood pickaxe"/>
      <xs:enumeration value="wood axe"/>
      <xs:enumeration value="stone sword"/>
      <xs:enumeration value="stone spade"/>
      <xs:enumeration value="stone pickaxe"/>
      <xs:enumeration value="stone axe"/>
      <xs:enumeration value="diamond sword"/>
      <xs:enumeration value="diamond spade"/>
      <xs:enumeration value="diamond pickaxe"/>
      <xs:enumeration value="diamond axe"/>
      <xs:enumeration value="stick"/>
      <xs:enumeration value="bowl"/>
      <xs:enumeration value="mushroom soup"/>
      <xs:enumeration value="gold sword"/>
      <xs:enumeration value="gold spade"/>
      <xs:enumeration value="gold pickaxe"/>
      <xs:enumeration value="gold axe"/>
      <xs:enumeration value="string"/>
      <xs:enumeration value="feather"/>
      <xs:enumeration value="sulphur"/>
      <xs:enumeration value="wood hoe"/>
      <xs:enumeration value="stone hoe"/>
      <xs:enumeration value="iron hoe"/>
      <xs:enumeration value="diamond hoe"/>
      <xs:enumeration value="gold hoe"/>
      <xs:enumeration value="seeds"/>
      <xs:enumeration value="wheat"/>
      <xs:enumeration value="bread"/>
      <xs:enumeration value="leather helmet"/>
      <xs:enumeration value="leather chestplate"/>
      <xs:enumeration value="leather leggings"/>
      <xs:enumeration value="leather boots"/>
      <xs:enumeration value="chainmail helmet"/>
      <xs:enumeration value="chainmail chestplate"/>
      <xs:enumeration value="chainmail leggings"/>
      <xs:enumeration value="chainmail boots"/>
      <xs:enumeration value="iron helmet"/>
      <xs:enumeration value="iron chestplate"/>
      <xs:enumeration value="iron leggings"/>
      <xs:enumeration value="iron boots"/>
      <xs:enumeration value="diamond helmet"/>
      <xs:enumeration value="diamond chestplate"/>
      <xs:enumeration value="diamond leggings"/>
      <xs:enumeration value="diamond boots"/>
      <xs:enumeration value="gold helmet"/>
      <xs:enumeration value="gold chestplate"/>
      <xs:enumeration value="gold leggings"/>
      <xs:enumeration value="gold boots"/>
      <xs:enumeration value="flint"/>
      <xs:enumeration value="pork"/>
      <xs:enumeration value="grilled pork"/>
      <xs:enumeration value="painting"/>
      <xs:enumeration value="golden apple"/>
      <xs:enumeration value="sign"/>
      <xs:enumeration value="wood door"/>
      <xs:enumeration value="bucket"/>
      <xs:enumeration value="water bucket"/>
      <xs:enumeration value="lava bucket"/>
      <xs:enumeration value="minecart"/>
      <xs:enumeration value="saddle"/>
      <xs:enumeration value="iron door"/>
      <xs:enumeration value="redstone"/>
      <xs:enumeration value="snow ball"/>
      <xs:enumeration value="boat"/>
      <xs:enumeration value="leather"/>
      <xs:enumeration value="milk bucket"/>
      <xs:enumeration value="clay brick"/>
      <xs:enumeration value="clay ball"/>
      <xs:enumeration value="sugar cane"/>
      <xs:enumeration value="paper"/>
      <xs:enumeration value="book"/>
      <xs:enumeration value="slime ball"/>
      <xs:enumeration value="storage minecart"/>
      <xs:enumeration value="powered minecart"/>
      <xs:enumeration value="egg"/>
      <xs:enumeration value="compass"/>
      <xs:enumeration value="fishing rod"/>
      <xs:enumeration value="watch"/>
      <xs:enumeration value="glowstone dust"/>
      <xs:enumeration value="raw fish"/>
      <xs:enumeration value="cooked fish"/>
      <xs:enumeration value="ink sack"/>
      <xs:enumeration value="bone"/>
      <xs:enumeration value="sugar"/>
      <xs:enumeration value="cake"/>
      <xs:enumeration value="bed"/>
      <xs:enumeration value="diode"/>
      <xs:enumeration value="cookie"/>
      <xs:enumeration value="map"/>
      <xs:enumeration value="shears"/>
      <xs:enumeration value="melon"/>
      <xs:enumeration value="pumpkin seeds"/>
      <xs:enumeration value="melon seeds"/>
      <xs:enumeration value="raw beef"/>
      <xs:enumeration value="cooked beef"/>
      <xs:enumeration value="raw chicken"/>
      <xs:enumeration value="cooked chicken"/>
      <xs:enumeration value="rotten flesh"/>
      <xs:enumeration value="ender pearl"/>
      <xs:enumeration value="blaze rod"/>
      <xs:enumeration value="ghast tear"/>
      <xs:enumeration value="gold nugget"/>
      <xs:enumeration value="nether stalk"/>
      <xs:enumeration value="potion"/>
      <xs:enumeration value="glass bottle"/>
      <xs:enumeration value="spider eye"/>
      <xs:enumeration value="fermented spider eye"/>
      <xs:enumeration value="blaze powder"/>
      <xs:enumeration value="magma cream"/>
      <xs:enumeration value="brewing stand item"/>
      <xs:enumeration value="cauldron item"/>
      <xs:enumeration value="eye of ender"/>
      <xs:enumeration value="speckled melon"/>
      <xs:enumeration value="monster egg"/>
      <xs:enumeration value="exp bottle"/>
      <xs:enumeration value="fireball"/>
      <xs:enumeration value="book and quill"/>
      <xs:enumeration value="written book"/>
      <xs:enumeration value="emerald"/>
      <xs:enumeration value="item frame"/>
      <xs:enumeration value="flower pot item"/>
      <xs:enumeration value="carrot item"/>
      <xs:enumeration value="potato item"/>
      <xs:enumeration value="baked potato"/>
      <xs:enumeration value="poisonous potato"/>
      <xs:enumeration value="empty map"/>
      <xs:enumeration value="golden carrot"/>
      <xs:enumeration value="skull item"/>
      <xs:enumeration value="carrot stick"/>
      <xs:enumeration value="nether star"/>
      <xs:enumeration value="pumpkin pie"/>
      <xs:enumeration value="firework"/>
      <xs:enumeration value="firework charge"/>
      <xs:enumeration value="enchanted book"/>
      <xs:enumeration value="redstone comparator"/>
      <xs:enumeration value="nether brick item"/>
      <xs:enumeration value="quartz"/>
      <xs:enumeration value="explosive minecart"/>
      <xs:enumeration value="hopper minecart"/>
      <xs:enumeration value="prismarine shard"/>
      <xs:enumeration value="prismarine crystals"/>
      <xs:enumeration value="rabbit"/>
      <xs:enumeration value="cooked rabbit"/>
      <xs:enumeration value="rabbit stew"/>
      <xs:enumeration value="rabbit foot"/>
      <xs:enumeration value="rabbit hide"/>
      <xs:enumeration value="armor stand"/>
      <xs:enumeration value="iron barding"/>
      <xs:enumeration value="gold barding"/>
      <xs:enumeration value="diamond barding"/>
      <xs:enumeration value="leash"/>
      <xs:enumeration value="name tag"/>
      <xs:enumeration value="command minecart"/>
      <xs:enumeration value="mutton"/>
      <xs:enumeration value="cooked mutton"/>
      <xs:enumeration value="banner"/>
      <xs:enumeration value="end crystal"/>
      <xs:enumeration value="spruce door item"/>
      <xs:enumeration value="birch door item"/>
      <xs:enumeration value="jungle door item"/>
      <xs:enumeration value="acacia door item"/>
      <xs:enumeration value="dark oak door item"/>
      <xs:enumeration value="chorus fruit"/>
      <xs:enumeration value="chorus fruit popped"/>
      <xs:enumeration value="beetroot"/>
      <xs:enumeration value="beetroot seeds"/>
      <xs:enumeration value="beetroot soup"/>
      <xs:enumeration value="dragons breath"/>
      <xs:enumeration value="splash potion"/>
      <xs:enumeration value="spectral arrow"/>
      <xs:enumeration value="tipped arrow"/>
      <xs:enumeration value="lingering potion"/>
      <xs:enumeration value="shield"/>
      <xs:enumeration value="elytra"/>
      <xs:enumeration value="boat spruce"/>
      <xs:enumeration value="boat birch"/>
      <xs:enumeration value="boat jungle"/>
      <xs:enumeration value="boat acacia"/>
      <xs:enumeration value="boat dark oak"/>
      <xs:enumeration value="totem"/>
      <xs:enumeration value="shulker shell"/>
      <xs:enumeration value="iron nugget"/>
      <xs:enumeration value="knowledge book"/>
      <xs:enumeration value="gold record"/>
      <xs:enumeration value="green record"/>
      <xs:enumeration value="record 3"/>
      <xs:enumeration value="record 4"/>
      <xs:enumeration value="record 5"/>
      <xs:enumeration value="record 6"/>
      <xs:enumeration value="record 7"/>
      <xs:enumeration value="record 8"/>
      <xs:enumeration value="record 9"/>
      <xs:enumeration value="record 10"/>
      <xs:enumeration value="record 11"/>
      <xs:enumeration value="record 12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="inventorySlot">
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-9]|[1-2][0-9]|3[0-5]|slot.weapon.(mainhand|offhand)|slot.hotbar.[0-8]|slot.inventory.([0-9]|1[0-9]|2[0-6])|slot.armor.(chest|feet|head|legs))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="itemPattern">
    <xs:restriction base="xs:string">
      <!--all possible ways to name an item-->
      <xs:pattern value="([aA][iI][rR]|[sS][tT][oO][nN][eE]|[gG][rR][aA][sS][sS]|[dD][iI][rR][tT]|[cC][oO][bB][bB][lL][eE][sS][tT][oO][nN][eE]|[wW][oO][oO][dD]|[sS][aA][pP][lL][iI][nN][gG]|[bB][eE][dD][rR][oO][cC][kK]|[wW][aA][tT][eE][rR]|[sS][tT][aA][tT][iI][oO][nN][aA][rR][yY][ _][wW][aA][tT][eE][rR]|[lL][aA][vV][aA]|[sS][tT][aA][tT][iI][oO][nN][aA][rR][yY][ _][lL][aA][vV][aA]|[sS][aA][nN][dD]|[gG][rR][aA][vV][eE][lL]|[gG][oO][lL][dD][ _][oO][rR][eE]|[iI][rR][oO][nN][ _][oO][rR][eE]|[cC][oO][aA][lL][ _][oO][rR][eE]|[lL][oO][gG]|[lL][eE][aA][vV][eE][sS]|[sS][pP][oO][nN][gG][eE]|[gG][lL][aA][sS][sS]|[lL][aA][pP][iI][sS][ _][oO][rR][eE]|[lL][aA][pP][iI][sS][ _][bB][lL][oO][cC][kK]|[dD][iI][sS][pP][eE][nN][sS][eE][rR]|[sS][aA][nN][dD][sS][tT][oO][nN][eE]|[nN][oO][tT][eE][ _][bB][lL][oO][cC][kK]|[bB][eE][dD][ _][bB][lL][oO][cC][kK]|[pP][oO][wW][eE][rR][eE][dD][ _][rR][aA][iI][lL]|[dD][eE][tT][eE][cC][tT][oO][rR][ _][rR][aA][iI][lL]|[pP][iI][sS][tT][oO][nN][ _][sS][tT][iI][cC][kK][yY][ _][bB][aA][sS][eE]|[wW][eE][bB]|[lL][oO][nN][gG][ _][gG][rR][aA][sS][sS]|[dD][eE][aA][dD][ _][bB][uU][sS][hH]|[pP][iI][sS][tT][oO][nN][ _][bB][aA][sS][eE]|[pP][iI][sS][tT][oO][nN][ _][eE][xX][tT][eE][nN][sS][iI][oO][nN]|[wW][oO][oO][lL]|[pP][iI][sS][tT][oO][nN][ _][mM][oO][vV][iI][nN][gG][ _][pP][iI][eE][cC][eE]|[yY][eE][lL][lL][oO][wW][ _][fF][lL][oO][wW][eE][rR]|[rR][eE][dD][ _][rR][oO][sS][eE]|[bB][rR][oO][wW][nN][ _][mM][uU][sS][hH][rR][oO][oO][mM]|[rR][eE][dD][ _][mM][uU][sS][hH][rR][oO][oO][mM]|[gG][oO][lL][dD][ _][bB][lL][oO][cC][kK]|[iI][rR][oO][nN][ _][bB][lL][oO][cC][kK]|[dD][oO][uU][bB][lL][eE][ _][sS][tT][eE][pP]|[sS][tT][eE][pP]|[bB][rR][iI][cC][kK]|[tT][nN][tT]|[bB][oO][oO][kK][sS][hH][eE][lL][fF]|[mM][oO][sS][sS][yY][ _][cC][oO][bB][bB][lL][eE][sS][tT][oO][nN][eE]|[oO][bB][sS][iI][dD][iI][aA][nN]|[tT][oO][rR][cC][hH]|[fF][iI][rR][eE]|[mM][oO][bB][ _][sS][pP][aA][wW][nN][eE][rR]|[wW][oO][oO][dD][ _][sS][tT][aA][iI][rR][sS]|[cC][hH][eE][sS][tT]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][wW][iI][rR][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][oO][rR][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][bB][lL][oO][cC][kK]|[wW][oO][rR][kK][bB][eE][nN][cC][hH]|[cC][rR][oO][pP][sS]|[sS][oO][iI][lL]|[fF][uU][rR][nN][aA][cC][eE]|[bB][uU][rR][nN][iI][nN][gG][ _][fF][uU][rR][nN][aA][cC][eE]|[sS][iI][gG][nN][ _][pP][oO][sS][tT]|[wW][oO][oO][dD][eE][nN][ _][dD][oO][oO][rR]|[lL][aA][dD][dD][eE][rR]|[rR][aA][iI][lL][sS]|[cC][oO][bB][bB][lL][eE][sS][tT][oO][nN][eE][ _][sS][tT][aA][iI][rR][sS]|[wW][aA][lL][lL][ _][sS][iI][gG][nN]|[lL][eE][vV][eE][rR]|[sS][tT][oO][nN][eE][ _][pP][lL][aA][tT][eE]|[iI][rR][oO][nN][ _][dD][oO][oO][rR][ _][bB][lL][oO][cC][kK]|[wW][oO][oO][dD][ _][pP][lL][aA][tT][eE]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][oO][rR][eE]|[gG][lL][oO][wW][iI][nN][gG][ _][rR][eE][dD][sS][tT][oO][nN][eE][ _][oO][rR][eE]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][tT][oO][rR][cC][hH][ _][oO][fF][fF]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][tT][oO][rR][cC][hH][ _][oO][nN]|[sS][tT][oO][nN][eE][ _][bB][uU][tT][tT][oO][nN]|[sS][nN][oO][wW]|[iI][cC][eE]|[sS][nN][oO][wW][ _][bB][lL][oO][cC][kK]|[cC][aA][cC][tT][uU][sS]|[cC][lL][aA][yY]|[sS][uU][gG][aA][rR][ _][cC][aA][nN][eE][ _][bB][lL][oO][cC][kK]|[jJ][uU][kK][eE][bB][oO][xX]|[fF][eE][nN][cC][eE]|[pP][uU][mM][pP][kK][iI][nN]|[nN][eE][tT][hH][eE][rR][rR][aA][cC][kK]|[sS][oO][uU][lL][ _][sS][aA][nN][dD]|[gG][lL][oO][wW][sS][tT][oO][nN][eE]|[pP][oO][rR][tT][aA][lL]|[jJ][aA][cC][kK][ _][oO][ _][lL][aA][nN][tT][eE][rR][nN]|[cC][aA][kK][eE][ _][bB][lL][oO][cC][kK]|[dD][iI][oO][dD][eE][ _][bB][lL][oO][cC][kK][ _][oO][fF][fF]|[dD][iI][oO][dD][eE][ _][bB][lL][oO][cC][kK][ _][oO][nN]|[sS][tT][aA][iI][nN][eE][dD][ _][gG][lL][aA][sS][sS]|[tT][rR][aA][pP][ _][dD][oO][oO][rR]|[mM][oO][nN][sS][tT][eE][rR][ _][eE][gG][gG][sS]|[sS][mM][oO][oO][tT][hH][ _][bB][rR][iI][cC][kK]|[hH][uU][gG][eE][ _][mM][uU][sS][hH][rR][oO][oO][mM][ _][11]|[hH][uU][gG][eE][ _][mM][uU][sS][hH][rR][oO][oO][mM][ _][22]|[iI][rR][oO][nN][ _][fF][eE][nN][cC][eE]|[tT][hH][iI][nN][ _][gG][lL][aA][sS][sS]|[mM][eE][lL][oO][nN][ _][bB][lL][oO][cC][kK]|[pP][uU][mM][pP][kK][iI][nN][ _][sS][tT][eE][mM]|[mM][eE][lL][oO][nN][ _][sS][tT][eE][mM]|[vV][iI][nN][eE]|[fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[bB][rR][iI][cC][kK][ _][sS][tT][aA][iI][rR][sS]|[sS][mM][oO][oO][tT][hH][ _][sS][tT][aA][iI][rR][sS]|[mM][yY][cC][eE][lL]|[wW][aA][tT][eE][rR][ _][lL][iI][lL][yY]|[nN][eE][tT][hH][eE][rR][ _][bB][rR][iI][cC][kK]|[nN][eE][tT][hH][eE][rR][ _][fF][eE][nN][cC][eE]|[nN][eE][tT][hH][eE][rR][ _][bB][rR][iI][cC][kK][ _][sS][tT][aA][iI][rR][sS]|[nN][eE][tT][hH][eE][rR][ _][wW][aA][rR][tT][sS]|[eE][nN][cC][hH][aA][nN][tT][mM][eE][nN][tT][ _][tT][aA][bB][lL][eE]|[bB][rR][eE][wW][iI][nN][gG][ _][sS][tT][aA][nN][dD]|[cC][aA][uU][lL][dD][rR][oO][nN]|[eE][nN][dD][eE][rR][ _][pP][oO][rR][tT][aA][lL]|[eE][nN][dD][eE][rR][ _][pP][oO][rR][tT][aA][lL][ _][fF][rR][aA][mM][eE]|[eE][nN][dD][eE][rR][ _][sS][tT][oO][nN][eE]|[dD][rR][aA][gG][oO][nN][ _][eE][gG][gG]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][lL][aA][mM][pP][ _][oO][fF][fF]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][lL][aA][mM][pP][ _][oO][nN]|[wW][oO][oO][dD][ _][dD][oO][uU][bB][lL][eE][ _][sS][tT][eE][pP]|[wW][oO][oO][dD][ _][sS][tT][eE][pP]|[cC][oO][cC][oO][aA]|[sS][aA][nN][dD][sS][tT][oO][nN][eE][ _][sS][tT][aA][iI][rR][sS]|[eE][mM][eE][rR][aA][lL][dD][ _][oO][rR][eE]|[eE][nN][dD][eE][rR][ _][cC][hH][eE][sS][tT]|[tT][rR][iI][pP][wW][iI][rR][eE][ _][hH][oO][oO][kK]|[tT][rR][iI][pP][wW][iI][rR][eE]|[eE][mM][eE][rR][aA][lL][dD][ _][bB][lL][oO][cC][kK]|[sS][pP][rR][uU][cC][eE][ _][wW][oO][oO][dD][ _][sS][tT][aA][iI][rR][sS]|[bB][iI][rR][cC][hH][ _][wW][oO][oO][dD][ _][sS][tT][aA][iI][rR][sS]|[jJ][uU][nN][gG][lL][eE][ _][wW][oO][oO][dD][ _][sS][tT][aA][iI][rR][sS]|[cC][oO][mM][mM][aA][nN][dD]|[bB][eE][aA][cC][oO][nN]|[cC][oO][bB][bB][lL][eE][ _][wW][aA][lL][lL]|[fF][lL][oO][wW][eE][rR][ _][pP][oO][tT]|[cC][aA][rR][rR][oO][tT]|[pP][oO][tT][aA][tT][oO]|[wW][oO][oO][dD][ _][bB][uU][tT][tT][oO][nN]|[sS][kK][uU][lL][lL]|[aA][nN][vV][iI][lL]|[tT][rR][aA][pP][pP][eE][dD][ _][cC][hH][eE][sS][tT]|[gG][oO][lL][dD][ _][pP][lL][aA][tT][eE]|[iI][rR][oO][nN][ _][pP][lL][aA][tT][eE]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][cC][oO][mM][pP][aA][rR][aA][tT][oO][rR][ _][oO][fF][fF]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][cC][oO][mM][pP][aA][rR][aA][tT][oO][rR][ _][oO][nN]|[dD][aA][yY][lL][iI][gG][hH][tT][ _][dD][eE][tT][eE][cC][tT][oO][rR]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][bB][lL][oO][cC][kK]|[qQ][uU][aA][rR][tT][zZ][ _][oO][rR][eE]|[hH][oO][pP][pP][eE][rR]|[qQ][uU][aA][rR][tT][zZ][ _][bB][lL][oO][cC][kK]|[qQ][uU][aA][rR][tT][zZ][ _][sS][tT][aA][iI][rR][sS]|[aA][cC][tT][iI][vV][aA][tT][oO][rR][ _][rR][aA][iI][lL]|[dD][rR][oO][pP][pP][eE][rR]|[sS][tT][aA][iI][nN][eE][dD][ _][cC][lL][aA][yY]|[sS][tT][aA][iI][nN][eE][dD][ _][gG][lL][aA][sS][sS][ _][pP][aA][nN][eE]|[lL][eE][aA][vV][eE][sS][ _][22]|[lL][oO][gG][ _][22]|[aA][cC][aA][cC][iI][aA][ _][sS][tT][aA][iI][rR][sS]|[dD][aA][rR][kK][ _][oO][aA][kK][ _][sS][tT][aA][iI][rR][sS]|[sS][lL][iI][mM][eE][ _][bB][lL][oO][cC][kK]|[bB][aA][rR][rR][iI][eE][rR]|[iI][rR][oO][nN][ _][tT][rR][aA][pP][dD][oO][oO][rR]|[pP][rR][iI][sS][mM][aA][rR][iI][nN][eE]|[sS][eE][aA][ _][lL][aA][nN][tT][eE][rR][nN]|[hH][aA][yY][ _][bB][lL][oO][cC][kK]|[cC][aA][rR][pP][eE][tT]|[hH][aA][rR][dD][ _][cC][lL][aA][yY]|[cC][oO][aA][lL][ _][bB][lL][oO][cC][kK]|[pP][aA][cC][kK][eE][dD][ _][iI][cC][eE]|[dD][oO][uU][bB][lL][eE][ _][pP][lL][aA][nN][tT]|[sS][tT][aA][nN][dD][iI][nN][gG][ _][bB][aA][nN][nN][eE][rR]|[wW][aA][lL][lL][ _][bB][aA][nN][nN][eE][rR]|[dD][aA][yY][lL][iI][gG][hH][tT][ _][dD][eE][tT][eE][cC][tT][oO][rR][ _][iI][nN][vV][eE][rR][tT][eE][dD]|[rR][eE][dD][ _][sS][aA][nN][dD][sS][tT][oO][nN][eE]|[rR][eE][dD][ _][sS][aA][nN][dD][sS][tT][oO][nN][eE][ _][sS][tT][aA][iI][rR][sS]|[dD][oO][uU][bB][lL][eE][ _][sS][tT][oO][nN][eE][ _][sS][lL][aA][bB][22]|[sS][tT][oO][nN][eE][ _][sS][lL][aA][bB][22]|[sS][pP][rR][uU][cC][eE][ _][fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[bB][iI][rR][cC][hH][ _][fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[jJ][uU][nN][gG][lL][eE][ _][fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[dD][aA][rR][kK][ _][oO][aA][kK][ _][fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[aA][cC][aA][cC][iI][aA][ _][fF][eE][nN][cC][eE][ _][gG][aA][tT][eE]|[sS][pP][rR][uU][cC][eE][ _][fF][eE][nN][cC][eE]|[bB][iI][rR][cC][hH][ _][fF][eE][nN][cC][eE]|[jJ][uU][nN][gG][lL][eE][ _][fF][eE][nN][cC][eE]|[dD][aA][rR][kK][ _][oO][aA][kK][ _][fF][eE][nN][cC][eE]|[aA][cC][aA][cC][iI][aA][ _][fF][eE][nN][cC][eE]|[sS][pP][rR][uU][cC][eE][ _][dD][oO][oO][rR]|[bB][iI][rR][cC][hH][ _][dD][oO][oO][rR]|[jJ][uU][nN][gG][lL][eE][ _][dD][oO][oO][rR]|[aA][cC][aA][cC][iI][aA][ _][dD][oO][oO][rR]|[dD][aA][rR][kK][ _][oO][aA][kK][ _][dD][oO][oO][rR]|[eE][nN][dD][ _][rR][oO][dD]|[cC][hH][oO][rR][uU][sS][ _][pP][lL][aA][nN][tT]|[cC][hH][oO][rR][uU][sS][ _][fF][lL][oO][wW][eE][rR]|[pP][uU][rR][pP][uU][rR][ _][bB][lL][oO][cC][kK]|[pP][uU][rR][pP][uU][rR][ _][pP][iI][lL][lL][aA][rR]|[pP][uU][rR][pP][uU][rR][ _][sS][tT][aA][iI][rR][sS]|[pP][uU][rR][pP][uU][rR][ _][dD][oO][uU][bB][lL][eE][ _][sS][lL][aA][bB]|[pP][uU][rR][pP][uU][rR][ _][sS][lL][aA][bB]|[eE][nN][dD][ _][bB][rR][iI][cC][kK][sS]|[bB][eE][eE][tT][rR][oO][oO][tT][ _][bB][lL][oO][cC][kK]|[gG][rR][aA][sS][sS][ _][pP][aA][tT][hH]|[eE][nN][dD][ _][gG][aA][tT][eE][wW][aA][yY]|[cC][oO][mM][mM][aA][nN][dD][ _][rR][eE][pP][eE][aA][tT][iI][nN][gG]|[cC][oO][mM][mM][aA][nN][dD][ _][cC][hH][aA][iI][nN]|[fF][rR][oO][sS][tT][eE][dD][ _][iI][cC][eE]|[mM][aA][gG][mM][aA]|[nN][eE][tT][hH][eE][rR][ _][wW][aA][rR][tT][ _][bB][lL][oO][cC][kK]|[rR][eE][dD][ _][nN][eE][tT][hH][eE][rR][ _][bB][rR][iI][cC][kK]|[bB][oO][nN][eE][ _][bB][lL][oO][cC][kK]|[sS][tT][rR][uU][cC][tT][uU][rR][eE][ _][vV][oO][iI][dD]|[oO][bB][sS][eE][rR][vV][eE][rR]|[wW][hH][iI][tT][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[oO][rR][aA][nN][gG][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[mM][aA][gG][eE][nN][tT][aA][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[lL][iI][gG][hH][tT][ _][bB][lL][uU][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[yY][eE][lL][lL][oO][wW][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[lL][iI][mM][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[pP][iI][nN][kK][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[gG][rR][aA][yY][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[sS][iI][lL][vV][eE][rR][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[cC][yY][aA][nN][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[pP][uU][rR][pP][lL][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[bB][lL][uU][eE][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[bB][rR][oO][wW][nN][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[gG][rR][eE][eE][nN][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[rR][eE][dD][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[bB][lL][aA][cC][kK][ _][sS][hH][uU][lL][kK][eE][rR][ _][bB][oO][xX]|[wW][hH][iI][tT][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[oO][rR][aA][nN][gG][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[mM][aA][gG][eE][nN][tT][aA][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[lL][iI][gG][hH][tT][ _][bB][lL][uU][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[yY][eE][lL][lL][oO][wW][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[lL][iI][mM][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[pP][iI][nN][kK][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[gG][rR][aA][yY][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[sS][iI][lL][vV][eE][rR][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[cC][yY][aA][nN][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[pP][uU][rR][pP][lL][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[bB][lL][uU][eE][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[bB][rR][oO][wW][nN][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[gG][rR][eE][eE][nN][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[rR][eE][dD][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[bB][lL][aA][cC][kK][ _][gG][lL][aA][zZ][eE][dD][ _][tT][eE][rR][rR][aA][cC][oO][tT][tT][aA]|[cC][oO][nN][cC][rR][eE][tT][eE]|[cC][oO][nN][cC][rR][eE][tT][eE][ _][pP][oO][wW][dD][eE][rR]|[sS][tT][rR][uU][cC][tT][uU][rR][eE][ _][bB][lL][oO][cC][kK]|[iI][rR][oO][nN][ _][sS][pP][aA][dD][eE]|[iI][rR][oO][nN][ _][pP][iI][cC][kK][aA][xX][eE]|[iI][rR][oO][nN][ _][aA][xX][eE]|[fF][lL][iI][nN][tT][ _][aA][nN][dD][ _][sS][tT][eE][eE][lL]|[aA][pP][pP][lL][eE]|[bB][oO][wW]|[aA][rR][rR][oO][wW]|[cC][oO][aA][lL]|[dD][iI][aA][mM][oO][nN][dD]|[iI][rR][oO][nN][ _][iI][nN][gG][oO][tT]|[gG][oO][lL][dD][ _][iI][nN][gG][oO][tT]|[iI][rR][oO][nN][ _][sS][wW][oO][rR][dD]|[wW][oO][oO][dD][ _][sS][wW][oO][rR][dD]|[wW][oO][oO][dD][ _][sS][pP][aA][dD][eE]|[wW][oO][oO][dD][ _][pP][iI][cC][kK][aA][xX][eE]|[wW][oO][oO][dD][ _][aA][xX][eE]|[sS][tT][oO][nN][eE][ _][sS][wW][oO][rR][dD]|[sS][tT][oO][nN][eE][ _][sS][pP][aA][dD][eE]|[sS][tT][oO][nN][eE][ _][pP][iI][cC][kK][aA][xX][eE]|[sS][tT][oO][nN][eE][ _][aA][xX][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][sS][wW][oO][rR][dD]|[dD][iI][aA][mM][oO][nN][dD][ _][sS][pP][aA][dD][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][pP][iI][cC][kK][aA][xX][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][aA][xX][eE]|[sS][tT][iI][cC][kK]|[bB][oO][wW][lL]|[mM][uU][sS][hH][rR][oO][oO][mM][ _][sS][oO][uU][pP]|[gG][oO][lL][dD][ _][sS][wW][oO][rR][dD]|[gG][oO][lL][dD][ _][sS][pP][aA][dD][eE]|[gG][oO][lL][dD][ _][pP][iI][cC][kK][aA][xX][eE]|[gG][oO][lL][dD][ _][aA][xX][eE]|[sS][tT][rR][iI][nN][gG]|[fF][eE][aA][tT][hH][eE][rR]|[sS][uU][lL][pP][hH][uU][rR]|[wW][oO][oO][dD][ _][hH][oO][eE]|[sS][tT][oO][nN][eE][ _][hH][oO][eE]|[iI][rR][oO][nN][ _][hH][oO][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][hH][oO][eE]|[gG][oO][lL][dD][ _][hH][oO][eE]|[sS][eE][eE][dD][sS]|[wW][hH][eE][aA][tT]|[bB][rR][eE][aA][dD]|[lL][eE][aA][tT][hH][eE][rR][ _][hH][eE][lL][mM][eE][tT]|[lL][eE][aA][tT][hH][eE][rR][ _][cC][hH][eE][sS][tT][pP][lL][aA][tT][eE]|[lL][eE][aA][tT][hH][eE][rR][ _][lL][eE][gG][gG][iI][nN][gG][sS]|[lL][eE][aA][tT][hH][eE][rR][ _][bB][oO][oO][tT][sS]|[cC][hH][aA][iI][nN][mM][aA][iI][lL][ _][hH][eE][lL][mM][eE][tT]|[cC][hH][aA][iI][nN][mM][aA][iI][lL][ _][cC][hH][eE][sS][tT][pP][lL][aA][tT][eE]|[cC][hH][aA][iI][nN][mM][aA][iI][lL][ _][lL][eE][gG][gG][iI][nN][gG][sS]|[cC][hH][aA][iI][nN][mM][aA][iI][lL][ _][bB][oO][oO][tT][sS]|[iI][rR][oO][nN][ _][hH][eE][lL][mM][eE][tT]|[iI][rR][oO][nN][ _][cC][hH][eE][sS][tT][pP][lL][aA][tT][eE]|[iI][rR][oO][nN][ _][lL][eE][gG][gG][iI][nN][gG][sS]|[iI][rR][oO][nN][ _][bB][oO][oO][tT][sS]|[dD][iI][aA][mM][oO][nN][dD][ _][hH][eE][lL][mM][eE][tT]|[dD][iI][aA][mM][oO][nN][dD][ _][cC][hH][eE][sS][tT][pP][lL][aA][tT][eE]|[dD][iI][aA][mM][oO][nN][dD][ _][lL][eE][gG][gG][iI][nN][gG][sS]|[dD][iI][aA][mM][oO][nN][dD][ _][bB][oO][oO][tT][sS]|[gG][oO][lL][dD][ _][hH][eE][lL][mM][eE][tT]|[gG][oO][lL][dD][ _][cC][hH][eE][sS][tT][pP][lL][aA][tT][eE]|[gG][oO][lL][dD][ _][lL][eE][gG][gG][iI][nN][gG][sS]|[gG][oO][lL][dD][ _][bB][oO][oO][tT][sS]|[fF][lL][iI][nN][tT]|[pP][oO][rR][kK]|[gG][rR][iI][lL][lL][eE][dD][ _][pP][oO][rR][kK]|[pP][aA][iI][nN][tT][iI][nN][gG]|[gG][oO][lL][dD][eE][nN][ _][aA][pP][pP][lL][eE]|[sS][iI][gG][nN]|[wW][oO][oO][dD][ _][dD][oO][oO][rR]|[bB][uU][cC][kK][eE][tT]|[wW][aA][tT][eE][rR][ _][bB][uU][cC][kK][eE][tT]|[lL][aA][vV][aA][ _][bB][uU][cC][kK][eE][tT]|[mM][iI][nN][eE][cC][aA][rR][tT]|[sS][aA][dD][dD][lL][eE]|[iI][rR][oO][nN][ _][dD][oO][oO][rR]|[rR][eE][dD][sS][tT][oO][nN][eE]|[sS][nN][oO][wW][ _][bB][aA][lL][lL]|[bB][oO][aA][tT]|[lL][eE][aA][tT][hH][eE][rR]|[mM][iI][lL][kK][ _][bB][uU][cC][kK][eE][tT]|[cC][lL][aA][yY][ _][bB][rR][iI][cC][kK]|[cC][lL][aA][yY][ _][bB][aA][lL][lL]|[sS][uU][gG][aA][rR][ _][cC][aA][nN][eE]|[pP][aA][pP][eE][rR]|[bB][oO][oO][kK]|[sS][lL][iI][mM][eE][ _][bB][aA][lL][lL]|[sS][tT][oO][rR][aA][gG][eE][ _][mM][iI][nN][eE][cC][aA][rR][tT]|[pP][oO][wW][eE][rR][eE][dD][ _][mM][iI][nN][eE][cC][aA][rR][tT]|[eE][gG][gG]|[cC][oO][mM][pP][aA][sS][sS]|[fF][iI][sS][hH][iI][nN][gG][ _][rR][oO][dD]|[wW][aA][tT][cC][hH]|[gG][lL][oO][wW][sS][tT][oO][nN][eE][ _][dD][uU][sS][tT]|[rR][aA][wW][ _][fF][iI][sS][hH]|[cC][oO][oO][kK][eE][dD][ _][fF][iI][sS][hH]|[iI][nN][kK][ _][sS][aA][cC][kK]|[bB][oO][nN][eE]|[sS][uU][gG][aA][rR]|[cC][aA][kK][eE]|[bB][eE][dD]|[dD][iI][oO][dD][eE]|[cC][oO][oO][kK][iI][eE]|[mM][aA][pP]|[sS][hH][eE][aA][rR][sS]|[mM][eE][lL][oO][nN]|[pP][uU][mM][pP][kK][iI][nN][ _][sS][eE][eE][dD][sS]|[mM][eE][lL][oO][nN][ _][sS][eE][eE][dD][sS]|[rR][aA][wW][ _][bB][eE][eE][fF]|[cC][oO][oO][kK][eE][dD][ _][bB][eE][eE][fF]|[rR][aA][wW][ _][cC][hH][iI][cC][kK][eE][nN]|[cC][oO][oO][kK][eE][dD][ _][cC][hH][iI][cC][kK][eE][nN]|[rR][oO][tT][tT][eE][nN][ _][fF][lL][eE][sS][hH]|[eE][nN][dD][eE][rR][ _][pP][eE][aA][rR][lL]|[bB][lL][aA][zZ][eE][ _][rR][oO][dD]|[gG][hH][aA][sS][tT][ _][tT][eE][aA][rR]|[gG][oO][lL][dD][ _][nN][uU][gG][gG][eE][tT]|[nN][eE][tT][hH][eE][rR][ _][sS][tT][aA][lL][kK]|[pP][oO][tT][iI][oO][nN]|[gG][lL][aA][sS][sS][ _][bB][oO][tT][tT][lL][eE]|[sS][pP][iI][dD][eE][rR][ _][eE][yY][eE]|[fF][eE][rR][mM][eE][nN][tT][eE][dD][ _][sS][pP][iI][dD][eE][rR][ _][eE][yY][eE]|[bB][lL][aA][zZ][eE][ _][pP][oO][wW][dD][eE][rR]|[mM][aA][gG][mM][aA][ _][cC][rR][eE][aA][mM]|[bB][rR][eE][wW][iI][nN][gG][ _][sS][tT][aA][nN][dD][ _][iI][tT][eE][mM]|[cC][aA][uU][lL][dD][rR][oO][nN][ _][iI][tT][eE][mM]|[eE][yY][eE][ _][oO][fF][ _][eE][nN][dD][eE][rR]|[sS][pP][eE][cC][kK][lL][eE][dD][ _][mM][eE][lL][oO][nN]|[mM][oO][nN][sS][tT][eE][rR][ _][eE][gG][gG]|[eE][xX][pP][ _][bB][oO][tT][tT][lL][eE]|[fF][iI][rR][eE][bB][aA][lL][lL]|[bB][oO][oO][kK][ _][aA][nN][dD][ _][qQ][uU][iI][lL][lL]|[wW][rR][iI][tT][tT][eE][nN][ _][bB][oO][oO][kK]|[eE][mM][eE][rR][aA][lL][dD]|[iI][tT][eE][mM][ _][fF][rR][aA][mM][eE]|[fF][lL][oO][wW][eE][rR][ _][pP][oO][tT][ _][iI][tT][eE][mM]|[cC][aA][rR][rR][oO][tT][ _][iI][tT][eE][mM]|[pP][oO][tT][aA][tT][oO][ _][iI][tT][eE][mM]|[bB][aA][kK][eE][dD][ _][pP][oO][tT][aA][tT][oO]|[pP][oO][iI][sS][oO][nN][oO][uU][sS][ _][pP][oO][tT][aA][tT][oO]|[eE][mM][pP][tT][yY][ _][mM][aA][pP]|[gG][oO][lL][dD][eE][nN][ _][cC][aA][rR][rR][oO][tT]|[sS][kK][uU][lL][lL][ _][iI][tT][eE][mM]|[cC][aA][rR][rR][oO][tT][ _][sS][tT][iI][cC][kK]|[nN][eE][tT][hH][eE][rR][ _][sS][tT][aA][rR]|[pP][uU][mM][pP][kK][iI][nN][ _][pP][iI][eE]|[fF][iI][rR][eE][wW][oO][rR][kK]|[fF][iI][rR][eE][wW][oO][rR][kK][ _][cC][hH][aA][rR][gG][eE]|[eE][nN][cC][hH][aA][nN][tT][eE][dD][ _][bB][oO][oO][kK]|[rR][eE][dD][sS][tT][oO][nN][eE][ _][cC][oO][mM][pP][aA][rR][aA][tT][oO][rR]|[nN][eE][tT][hH][eE][rR][ _][bB][rR][iI][cC][kK][ _][iI][tT][eE][mM]|[qQ][uU][aA][rR][tT][zZ]|[eE][xX][pP][lL][oO][sS][iI][vV][eE][ _][mM][iI][nN][eE][cC][aA][rR][tT]|[hH][oO][pP][pP][eE][rR][ _][mM][iI][nN][eE][cC][aA][rR][tT]|[pP][rR][iI][sS][mM][aA][rR][iI][nN][eE][ _][sS][hH][aA][rR][dD]|[pP][rR][iI][sS][mM][aA][rR][iI][nN][eE][ _][cC][rR][yY][sS][tT][aA][lL][sS]|[rR][aA][bB][bB][iI][tT]|[cC][oO][oO][kK][eE][dD][ _][rR][aA][bB][bB][iI][tT]|[rR][aA][bB][bB][iI][tT][ _][sS][tT][eE][wW]|[rR][aA][bB][bB][iI][tT][ _][fF][oO][oO][tT]|[rR][aA][bB][bB][iI][tT][ _][hH][iI][dD][eE]|[aA][rR][mM][oO][rR][ _][sS][tT][aA][nN][dD]|[iI][rR][oO][nN][ _][bB][aA][rR][dD][iI][nN][gG]|[gG][oO][lL][dD][ _][bB][aA][rR][dD][iI][nN][gG]|[dD][iI][aA][mM][oO][nN][dD][ _][bB][aA][rR][dD][iI][nN][gG]|[lL][eE][aA][sS][hH]|[nN][aA][mM][eE][ _][tT][aA][gG]|[cC][oO][mM][mM][aA][nN][dD][ _][mM][iI][nN][eE][cC][aA][rR][tT]|[mM][uU][tT][tT][oO][nN]|[cC][oO][oO][kK][eE][dD][ _][mM][uU][tT][tT][oO][nN]|[bB][aA][nN][nN][eE][rR]|[eE][nN][dD][ _][cC][rR][yY][sS][tT][aA][lL]|[sS][pP][rR][uU][cC][eE][ _][dD][oO][oO][rR][ _][iI][tT][eE][mM]|[bB][iI][rR][cC][hH][ _][dD][oO][oO][rR][ _][iI][tT][eE][mM]|[jJ][uU][nN][gG][lL][eE][ _][dD][oO][oO][rR][ _][iI][tT][eE][mM]|[aA][cC][aA][cC][iI][aA][ _][dD][oO][oO][rR][ _][iI][tT][eE][mM]|[dD][aA][rR][kK][ _][oO][aA][kK][ _][dD][oO][oO][rR][ _][iI][tT][eE][mM]|[cC][hH][oO][rR][uU][sS][ _][fF][rR][uU][iI][tT]|[cC][hH][oO][rR][uU][sS][ _][fF][rR][uU][iI][tT][ _][pP][oO][pP][pP][eE][dD]|[bB][eE][eE][tT][rR][oO][oO][tT]|[bB][eE][eE][tT][rR][oO][oO][tT][ _][sS][eE][eE][dD][sS]|[bB][eE][eE][tT][rR][oO][oO][tT][ _][sS][oO][uU][pP]|[dD][rR][aA][gG][oO][nN][sS][ _][bB][rR][eE][aA][tT][hH]|[sS][pP][lL][aA][sS][hH][ _][pP][oO][tT][iI][oO][nN]|[sS][pP][eE][cC][tT][rR][aA][lL][ _][aA][rR][rR][oO][wW]|[tT][iI][pP][pP][eE][dD][ _][aA][rR][rR][oO][wW]|[lL][iI][nN][gG][eE][rR][iI][nN][gG][ _][pP][oO][tT][iI][oO][nN]|[sS][hH][iI][eE][lL][dD]|[eE][lL][yY][tT][rR][aA]|[bB][oO][aA][tT][ _][sS][pP][rR][uU][cC][eE]|[bB][oO][aA][tT][ _][bB][iI][rR][cC][hH]|[bB][oO][aA][tT][ _][jJ][uU][nN][gG][lL][eE]|[bB][oO][aA][tT][ _][aA][cC][aA][cC][iI][aA]|[bB][oO][aA][tT][ _][dD][aA][rR][kK][ _][oO][aA][kK]|[tT][oO][tT][eE][mM]|[sS][hH][uU][lL][kK][eE][rR][ _][sS][hH][eE][lL][lL]|[iI][rR][oO][nN][ _][nN][uU][gG][gG][eE][tT]|[kK][nN][oO][wW][lL][eE][dD][gG][eE][ _][bB][oO][oO][kK]|[gG][oO][lL][dD][ _][rR][eE][cC][oO][rR][dD]|[gG][rR][eE][eE][nN][ _][rR][eE][cC][oO][rR][dD]|[rR][eE][cC][oO][rR][dD][ _][33]|[rR][eE][cC][oO][rR][dD][ _][44]|[rR][eE][cC][oO][rR][dD][ _][55]|[rR][eE][cC][oO][rR][dD][ _][66]|[rR][eE][cC][oO][rR][dD][ _][77]|[rR][eE][cC][oO][rR][dD][ _][88]|[rR][eE][cC][oO][rR][dD][ _][99]|[rR][eE][cC][oO][rR][dD][ _][11][00]|[rR][eE][cC][oO][rR][dD][ _][11][11]|[rR][eE][cC][oO][rR][dD][ _][11][22])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="xyzType">
    <xs:restriction base="xs:string">
      <xs:pattern value="(-?[0-9]+(\.[0-9][0-9]?)?|-?oo),(-?[0-9]+(\.[0-9][0-9]?)?|-?oo),(-?[0-9]+(\.[0-9][0-9]?)?|-?oo)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="xzType">
    <xs:restriction base="xs:string">
      <xs:pattern value="(-?[0-9]+(\.[0-9][0-9]?)?|-?oo),(-?[0-9]+(\.[0-9][0-9]?)?|-?oo)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="hexType">
    <xs:restriction base="xs:string">
      <xs:length value="6" fixed="true" />
      <xs:pattern value="[0-9a-fA-F]{6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="uuidType">
    <xs:restriction base="xs:string">
      <xs:minLength value="32"/>
      <xs:maxLength value="36"/>
      <xs:pattern value="[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[8-9a-bA-B][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="timeType">
    <xs:restriction base="xs:string">
      <xs:pattern value="(\d+(\.\d?)?)[s,m,h,d]?|(\.[0-9])[s,m,h,d]?|oo"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="semanticType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]+\.*[0-9]*\.*[0-9]*"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
